Word,Count
{,656
=,653
+,514
},501
if,332
\"\\,175
==,164
\CustomAmmoCategoriesLog.Log.LogWrite("\\,144
return,140
static,134
public,127
|,121
\"\\n"\);\,113
new,93
BindingFlags.Instance,92
};,85
null),73
!=,70
false;,68
int,67
float,60
false),53
else,53
\false,\,52
in,47
0),47
as,46
bool,45
<,44
0;,44
true;,42
continue;,42
string,40
is,38
class,38
foreach,36
BindingFlags.NonPublic).GetValue(__instance);,36
\BindingFlags.NonPublic).SetValue(__instance,\,33
Type[],33
>,33
for,33
return;,31
\null,\,31
\IndirectFireCapable\n"\);\,31
void,31
hitIndex,31
\CustomAmmoCategoriesLog.Log.LogWrite("\get\,30
damage,30
})],30
[HarmonyPatch(new,30
(int,27
0f;,26
[HarmonyPatch(MethodType.Normal)],26
BindingFlags.NonPublic,25
weapon,25
true),24
effect,23
to,23
\0.0f,\,23
<=,23
/,22
weapon),22
index,21
null;,21
*,21
});,20
||,20
var,20
not,19
\__instance,\,19
+=,19
\"\/"\\,19
bullet,18
gameState.AddFromShopDefItem(new,18
\-1,\,18
\(int)typeof(WeaponEffect).GetField("\hitIndex"\,\,18
burnHeat,18
__instance),17
Vector3,17
\(CustomAmmoCategories.checkExistance(weapon.StatCollection,\,16
ref,16
-,16
private,16
BallisticEffect,16
&&,16
ExtAmmunitionDef,15
toHit,15
the,15
\hitIndex,\,15
\weapon,\,14
CustomAmmoCategory,14
of,14
\"\:"\\,14
Weapon,14
bullets,14
AbstractActor,14
__result,14
hit,13
cell,13
\Dictionary<string,\,13
CustomAmmoCategories.AmmoIdStatName),13
from,13
ammo,13
heat,13
(UnityEngine.Object)null),12
shell,12
a,12
//,12
extWeapon,11
>=,11
weapon.UIName,11
MapTerrainDataCellEx,11
true);,11
BindingFlags.Instance).GetValue(__instance);,11
hitIndex);,11
1;,11
ExtWeaponDef,11
AIUtil_UnitHasLOFToTargetFromPosition,11
(__instance,11
\__instance.GUID,\,11
rollMod,11
CustomAmmoCategories.findExtAmmo(CurrentAmmoId);,11
found,10
\Dictionary<int,\,10
shrapnelHitRecord,10
can't,10
object[1],10
ShrapnelHitRecord,10
extAmmoDef,10
\"\+\,10
(var,10
t,10
weapon.StatCollection.GetStatistic(CustomAmmoCategories.AmmoIdStatName).Value<string>();,10
wGUID,10
CurrentAmmoId,10
//int,10
MapTerrainDataCellEx;,10
(Weapon,9
\0,\,9
++index),9
CustomAmmoCategories.getExtWeaponDef(weapon.defId);,9
with,9
\true,\,9
(shrapnelHitRecord,9
shrapnel,9
(mineField.HitChance,9
actor,9
find,9
__result),9
ammoId,9
no,9
result,8
\FloatieMessage(__instance.GUID,\,8
\hitInfo,\,8
null);,8
\fallback\n"\);\,8
object[0],8
bulletIdx,8
\CustomAmmoCategories.getShrapnelCache(__instance.hitInfo,\,8
record,8
[HarmonyPatch(typeof(WeaponEffect))],8
:,8
Prefix(WeaponEffect,8
//__instance.Combat.MessageCenter.PublishMessage((MessageCenterMessage)new,8
\1,\,8
false);,8
,8
ammoCategory,7
[HarmonyPatch(MethodType.Getter)],7
(cell,7
\"\"\;\,7
\(BallisticEffect)typeof(BulletEffect).GetField("\parentLauncher"\,\,7
weapon.defId,7
burnCount,7
null,7
__instance.hitInfo.hitLocations[hitIndex],7
\},\,7
Effect,7
0,7
BulletEffect,7
parentLauncher,7
result;,7
List<BulletEffect>,7
ammoId);,7
WeaponHitInfo,7
\BattleTech.ShopItemType.Weapon,\,7
\(List<BulletEffect>)typeof(BallisticEffect).GetField("\bullets"\,\,7
\hitIndex:"\\,7
component,6
bulletIndex,6
AbstractActor;,6
\"\\n"\,\,6
hitInfo;,6
__instance.hitInfo,6
CustomAmmoCategories.Epsilon),6
1f;,6
(CustomAmmoCategories.getWeaponHasShells(__instance.weapon)),6
on,6
weapon.ammoBoxes.Count;,6
(weapon.ammoBoxes[index].CurrentAmmo,6
(UnityEngine.Object)null)),6
//if,6
endPos,6
__instance.currentState,6
//},6
0);,6
\Log.LogWrite("\\,6
\typeof(WeaponEffect).GetField("\t"\,\,6
hitDamage,6
cuCat,6
\CustomAmmoCategoriesLog.Log.LogWrite("\AMS\,6
duration,6
[HarmonyPatch(typeof(BallisticEffect))],6
GameObject,6
typeof(int),6
(weapon.ammoBoxes[index].IsFunctional,6
roll,6
ICombatant,6
has,6
0.0),6
\MeleeAttackType.NotSet,\,6
rollMod),6
y,6
__instance,6
shells,6
can,5
\typeof(Vector3),\,5
BulletEffect),5
\CustomAmmoCategoriesLog.Log.LogWrite("\Ballistic\,5
\shell\n"\);\,5
num,5
emitterIndex),5
\typeof(int),\,5
but,5
weapon.ammoBoxes[index].ammoDef.Description.Id;,5
extAmmo,5
\subeffect\n"\);\,5
в,5
[HarmonyPatch(typeof(MechMeleeSequence))],5
code,5
parent,5
(target,5
(currentBullet,5
\mod:"\\,5
HEAT,5
iheat,5
pHitIndex,5
\(Vector3)typeof(WeaponEffect).GetField("\endPos"\,\,5
TSTPath,5
__instance.hitInfo.numberOfShots;,5
\BattleTech.ShopItemType.MechPart,\,5
target),5
rol,5
be,5
No,5
HeatPerShot,5
\typeof(WeaponHitInfo),\,5
[HarmonyPriority(Priority.Normal)],5
currentBullet,5
не,5
mode,5
\actor.GUID,\,5
BallisticEffect;,5
(weapon.ammoBoxes.Count,5
FROM,5
ParticleSystem,5
FloatieMessage.MessageNature.Debuff));,5
current,5
\BindingFlags.NonPublic).Invoke(__instance,\,5
info,5
\BattleTechResourceType.Prefab,\,5
\BattleTech.ShopItemType.Upgrade,\,5
assembly,5
msg,5
(__instance.subEffect,5
Prefix(BallisticEffect,5
string.Empty;,5
already,5
\typeof(WeaponEffect).GetField("\hitIndex"\,\,5
\20,\,5
++bulletIdx),4
Hit,4
AmmoCategory.NotSet),4
Damage,4
PathingCaps.Description.Id,4
(combatantByGuid,4
DamageType.Combat);,4
bulletHitIndex,4
\[HarmonyPatch("\CompleteOrders"\)]\,4
weaponAmmoCategory,4
\id,\,4
WeaponEffect_PlayProjectile.Prefix(__instance);,4
bullet.GetInstanceID(),4
cell.x,4
\choose\n"\);\,4
have,4
LaserEffect,4
targetGUID,4
startPos,4
catch,4
bullets),4
MineFieldHelper.inflictRegistredMovingDamageMech(__instance.OwningMech);,4
try,4
List<Weapon>();,4
0.0f);,4
(damage,4
List<MapPoint>,4
\2f,\,4
(__instance.subEffect),4
(MapPoint,4
\pathing:"\\,4
by,4
heatDamage,4
\target.CurrentPosition,\,4
\weapon.MaxRange,\,4
\("\\,4
combatantByGuid,4
\Log.LogWrite("\PilotableActorRepresentation.RefreshSurfaceType\,4
Fire,4
\[HarmonyPatch("\Fire"\)]\,4
CustomAmmoCategories.findExtAmmo(weapon.ammoBoxes[index].ammoDef.Description.Id);,4
cell.y,4
cachedCurve.Intercepted,4
instability,4
\unit.CurrentPosition,\,4
1f,4
Transform,4
List<int>,4
this,4
gameState.CurSystem.SystemShop.ActiveInventory.Add(new,4
gameObject,4
\"\,"\\,4
CustomAmmoCategories,4
and,4
\weapon.GetToHitFromPosition(target,\,4
e),4
\typeof(WeaponEffect).GetField("\startPos"\,\,4
Закроем,4
\4f,\,4
method,4
pos,4
}else,4
соединение,4
mine,4
\BattleTech.ShopItemType.HeatSink,\,4
shrapnelHitRecord.shellsHitIndex,4
\__instance.TakeWeaponDamage(fakeHit,\,4
autoPoolObject,4
CustomAmmoCategories.getIndirectFireCapable(weapon))),4
\CustomAmmoCategoriesLog.Log.LogWrite("\Bullet\,4
DamageType.DFASelf);,4
\WeaponHitInfo(-1,\,4
\15,\,4
weapon.StatCollection.GetStatistic(CustomAmmoCategories.GUIDStatisticName).Value<string>();,4
(targetActor,4
movingDamage,4
List<Weapon>,4
\damage:"\\,4
an,4
65536,4
x,4
(parentLauncher.subEffect,4
\bulletHitIndex,\,4
\//__instance.TakeWeaponDamage(fakeHit,\,4
65536),4
This,4
bullets.Count;,4
Mech,4
bullets.Count,4
\grp:"\\,4
CombatGameState,4
\effect\n"\);\,4
FloatieMessage.MessageNature.CriticalHit));,4
currentBulletBorder,3
10f;,3
1f);,3
\WeaponHitInfo,\,3
mapPoint.y],3
\hit:"\\,3
\//CustomAmmoCategoriesLog.Log.LogWrite("\\,3
AOE,3
emitterIndex);,3
ammoShots;,3
bullets[bulletIdx].currentState,3
(MineField,3
AttackImpactQuality[1],3
mineField.damage;,3
\(Vector3)typeof(WeaponEffect).GetField("\startPos"\,\,3
altered,3
BindingFlags.Instance).GetValue(bullet);,3
foreach(var,3
mineField,3
(cell.BurningStrength,3
unit.Weapons),3
(object)rate);,3
\instance:"\\,3
CustomAmmoCategories.GUIDStatisticName),3
\"\):\n"\);\,3
other,3
taking,3
(float)burnCount);,3
\(CombatGameState)typeof(WeaponEffect).GetField("\Combat"\,\,3
строку,3
mineField.weapon;,3
Material,3
\(float)typeof(WeaponEffect).GetField("\t"\,\,3
treesCount,3
aHitIndex,3
(Transform)null);,3
original,3
CustomAmmoCategories.Settings.MineFieldPathingMods[PathingCaps.Description.Id];,3
mapPoints,3
weapon.ProjectilesPerShot;,3
\typeof(WeaponEffect).GetField("\startingTransform"\,\,3
Postfix(MechMeleeSequence,3
!((UnityEngine.Object)combatantByGuid.GameRep,3
DAMAGE,3
delta,3
\t:"\\,3
++burnCount;,3
\become:"\\,3
fieldVFX,3
(ap.x,3
object[],3
mapPoint,3
(mineField.count,3
mineField.damage,3
component.Stop(true);,3
1)),3
на,3
Mathf.RoundToInt((float)burnHeat,3
ClusterShot,3
get;,3
\cell:"\\,3
set;,3
CACWeaponEffect,3
so,3
\ShowActorInfoSequence(actor,\,3
(string.IsNullOrEmpty(ammoId)),3
\weapon.StatCollection.AddStatistic<string>(CustomAmmoCategories.AmmoIdStatName,\,3
\(PathingCapabilitiesDef)typeof(Pathing).GetProperty("\PathingCaps"\,\,3
float>,3
\needed\n"\);\,3
GUID,3
BallisticEffect),3
\ammo\n"\);\,3
__instance.hitInfo.numberOfShots,3
mineField.heat;,3
\//__instance.GenerateAndPublishHeatSequence(-1,\,3
(burnHeat,3
AddSequenceToStackMessage(,3
Ammo,3
BindingFlags.NonPublic).GetValue(bullets[bulletIdx]);,3
_scorchMaterial,3
клиенту,3
weapon.ShotsWhenFired,3
List<WayPoint>,3
\Vector3?(),\,3
CustomAmmoCategories.NotSetCustomAmmoCategoty.Index),3
actor.Combat.MessageCenter.PublishMessage(,3
AMS,3
ammoWeapons),3
PathingCaps,3
rate,3
\weapon.StatCollection.Set<bool>(TemporarilyDisabledStatisticName,\,3
unit,3
(Exception,3
\Dictionary<TerrainMaskFlags,\,3
\//__instance.AddExternalHeat("\MineField"\,\,3
PathingCapabilitiesDef,3
cell.BurningStrength;,3
Weapon),3
\override:"\\,3
\typeof(WeaponEffect).GetField("\rate"\,\,3
(cacwe,3
state,3
MethodType.Normal)],3
cacwe,3
\CustomAmmoCategoriesLog.Log.LogWrite("\BallisticEffect\,3
\(unit.HasLOFToTargetUnit(target,\,3
2060000));,3
following,3
launcher,3
\complete\n"\);\,3
-=,3
по,3
4;,3
\state:"\\,3
\weapon.StatCollection.Set<string>(CustomAmmoCategories.AmmoIdStatName,\,3
\8,\,3
Postfix(MissileLauncherEffect,3
BindingFlags.Instance).GetValue(bullets[bulletIdx]);,3
List<string>,3
modeId,3
targetActor,3
(iheat,3
bullet.bulletIdx,3
\unit,\,3
\CustomAmmoCategoriesLog.Log.LogWrite("\can't\,3
(extWeapon.IsAMS),3
BindingFlags.Static,3
bullets[bulletIdx].bulletIdx,3
true)));,3
mineField.owner;,3
AttackImpactQuality.Solid,3
You,3
\validationLevel,\,3
\CustomCategoriesLog.LogWrite("\\,3
rollMod)),3
\Quaternion?(),\,3
\BindingFlags.Instance).Invoke(__instance,\,3
CACWeaponEffect;,3
Combat,3
args[1],3
args);,3
\__instance.Combat.MapMetaData.mapTerrainDataCells[mapPoint.x,\,3
__instance.hitInfo.hitLocations[hitIndex];,3
Mathf.RoundToInt(heat);,3
you,3
\MINEFIELD"\,\,3
WeaponEffect.WeaponEffectState.Complete),3
Mathf.Round(damage);,3
gameObject.GetInstanceID(),3
и,3
test,3
0)),3
CustomAmmoCategories.NotSetCustomAmmoCategoty;,3
\Was:"\\,3
[HarmonyPatch(typeof(FootstepManager))],3
targetActor.IsEvasive,3
iheat);,3
args,3
\int,\,3
\damage,\,3
modified,3
curvyInfo.UnitySpline,3
\HitIndex:"\\,3
\BindingFlags.NonPublic).GetGetMethod(true).Invoke(__instance.Pathing,\,3
startTransformObject,3
PropertyInfo,3
cell.MineField),3
\typeof(BallisticEffect).GetField("\currentBullet"\,\,3
__instance.GUID);,3
Version,3
\CustomAmmoCategoriesLog.Log.LogWrite("\Weapon\,3
WeaponEffect.WeaponEffectState.PreFiring;,3
behavior,3
curAmmo,3
damaged,3
\idx:"\\,3
\typeof(ICombatant),\,3
extAmmo.HeatDamagePerShot;,3
type,3
(ap.y,3
(roll,3
target);,3
AbstractActor);,3
\choosed\n"\);\,3
distance,3
startingTransform,3
mapPoints),3
currentBullet;,3
\Random.Range(0f,\,3
burnHeat;,3
fakeHit,3
[HarmonyPriority(Priority.First)],3
get,3
(CustomAmmoCategories.Settings.MineFieldPathingMods.ContainsKey(PathingCaps.Description.Id)),3
or,3
[HarmonyPatch(typeof(BulletEffect))],3
all,3
\field:"\\,3
\"\:"\+\,3
mineField.count,3
movingDamage.mineFieldHeat,2
\this.weapon,\,2
HashSet<int>,2
(heatDamage),2
(spreadRecord,2
\(int)ArmorLocation.RightLeg,\,2
cluster,2
args[0],2
__instance.hitInfo.numberOfShots),2
shHitIndex,2
WeaponEffect.OnComplete(),2
__instance.projectileSpeed;,2
\[HarmonyPatch("\OnComplete"\)]\,2
object[3];,2
\CustomAmmoCategoriesLog.Log.LogWrite("\bullets\,2
BTLightAnimator,2
\typeof(WeaponEffect).GetField("\duration"\,\,2
endx,2
*=,2
\MechValidationRules.MechComponentUnderMaintenance(mechComponentRef,\,2
(object)duration);,2
\"\MINEFIELD\,2
0.0f;,2
BindingFlags.NonPublic).GetValue(shrapnelHitRecord.shellsSubEffect);,2
\CustomAmmoCategoriesLog.Log.LogWrite("\:\,2
\CustomAmmoCategories.SetWeaponAmmo(weapon,\,2
instability;,2
(weapon.weaponDef.ShotsWhenFired,2
++hitIndex),2
DirectFireModifier,2
__instance.AmmoCategory.ToString());,2
'Mech,2
хранит,2
FireNextBullet,2
(object)cuCat.Id,2
{0},2
(unit,2
File.Exists(TSTPath),2
this.wasForest,2
weaponIndex,2
\AttackSequenceImpactMessage(hitInfo,\,2
(parentLauncher.subEffect),2
https://docs.microsoft.com/en-us/dotnet/api/system.activator?view=netframework-3.5,2
AMMO:,2
\CustomAmmoCategoriesLog.Log.LogWrite("\Error\,2
List<int>();,2
\"\/"\+__instance.GetInstanceID()\,2
CustomAmmoCategory>();,2
//var,2
movingDamage.weapon,2
\typeof(WeaponEffect).GetField("\currentPos"\,\,2
\typeof(WeaponEffect).GetProperty("\FiringComplete"\);\,2
\seqID:"\\,2
def),2
gameObject.GetComponent<ParticleSystem>();,2
(object)bulletHitIndex);,2
amsShoot.target);,2
attackIndex,2
\gen.Emit(OpCodes.Call,\,2
__instance.GUID,2
достиг,2
ammoCategoryList2),2
gen.Emit(OpCodes.Ldarg_0);,2
\weapon.StatCollection.Set<bool>(CustomAmmoCategories.TemporarilyDisabledStatisticName,\,2
статус-коды,2
ammoShots,2
tempExpectedDamage,2
(mechComponentRef.DamageLevel,2
typeof(bool),2
\wId:"\\,2
(object)0.0f);,2
для,2
bullet.hitInfo.attackWeaponIndex,2
Mode,2
\scale,\,2
Revision,2
burnHeat);,2
MIT,2
know,2
ammoCategory.ToString());,2
component.projectileSpeed,2
https://blogs.msdn.microsoft.com/rmbyers/2008/08/16/invoking-a-virtual-method-non-virtually/,2
AOEHitIndex,2
\meele\n"\);\,2
attribute,2
component.transform.position,2
load,2
requred,2
отрезка,2
(object)emitterIndex);,2
файла,2
(mechComponentRef.ComponentDefType,2
\DynamicMapHelper.getVisitedPoints(__instance.Combat,\,2
все,2
sequenceId,2
__instance.attackSequenceNextDelayMax,2
category:,2
spreadRecord.targetGUID;,2
\"\CustomAmmoCategories.json"\);\,2
\OK"\\,2
are,2
starting,2
++t),2
Prefix(MechMeleeSequence,2
\uid:"\\,2
groupId,2
CustomAmmoCategories.getExtWeaponDef(def.Description.Id).AmmoCategory;,2
la,2
(__instance.AmmoCategory,2
\indexes:"\);\,2
(bullet.currentState,2
\CustomAmmoCategoriesLog.Log.LogWrite("\FireNextBullet\,2
custCat),2
numberOfShots,2
cell;,2
method.Invoke(obj:,2
2;,2
Получаем,2
ComponentDamageLevel.Functional,2
extWeapon.AmmoCategory;,2
AutoPoolObject,2
(object)0);,2
movingDamage.mineFieldInstability,2
extAmmo.ProjectilesPerShot);,2
def,2
effects,2
HeatSetted,2
\"\)\,2
chance,2
\[HarmonyPatch(typeof(BallisticEffect),\,2
WeaponEffect_OnComplete(__instance);,2
Если,2
LICENSE,2
\Log.LogWrite("\no\,2
\x:"\\,2
mechComponentRef.Def,2
custCat.Id,2
gameObject.AddComponent<AutoPoolObject>();,2
CustomAmmoCategories.ClearPlayerWeapons();,2
(AOEHitsInfo,2
add,2
AOECapable,2
\Vector2.zero,\,2
statCount,2
normal,2
waypoints);,2
movingDamage();,2
call,2
actor.GUID);,2
(Transform)null;,2
\AttackDirection.FromArtillery,\,2
Transpiler(IEnumerable<CodeInstruction>,2
HttpStatusCode,2
values,2
\hitLocations,\,2
120000));,2
__instance.DisplayName,2
\combatantByGuid.GameRep.PlayImpactAnim(this.hitInfo,\,2
\[HarmonyPatch("\ImpactPrecacheCount"\)]\,2
(object)startingTransform.position);,2
\bullet\n"\);\,2
(object)false,2
detected,2
\index:"\\,2
mode.Key;,2
componentInChildren,2
__instance.hitInfo.attackWeaponIndex,2
ActorMineFieldVFX,2
(object)0f);,2
WeaponEffect.WeaponEffectState.WaitingForImpact;,2
ShrapnelWeaponEffectID,2
range,2
ActorMovementSequence,2
Meador,2
effectiveHitIndex,2
nonClusterCoeff,2
BallisticEffect_FireNextBulletShell.watchdog.Reset();,2
\shrapnelHitRecord,\,2
(cuCat.BaseCategory,2
//__instance.HandleDeath(actor.GUID);,2
\minefield:"\\,2
(instability,2
spreadRecord,2
it,2
movingDamage.burnHeat,2
\fly:"\\,2
default,2
dm,2
вида,2
(HeatPerShot,2
\dmg:"\\,2
cell.BurningStrength,2
координаты,2
args[2],2
under,2
Strange,2
ClusterSetted,2
WeaponRealizer,2
\[HarmonyPatch("\FiringComplete"\)]\,2
manifest,2
ballistic,2
\__instance.thisTransform.position,\,2
box,2
readonly,2
at,2
HTTP/1.1,2
movingDamage.mineFieldDamage,2
BindingFlags.NonPublic).GetValue(parentLauncher);,2
LOS,2
__instance.hitInfo.attackGroupIndex,2
set,2
fieldDamageRec.lastCell,2
\"\200\,2
SpreadHitRecord,2
(File.Exists(TSTPath),2
цели,2
ext,2
bullet.hitInfo.attackGroupIndex,2
should,2
//Combat.MessageCenter.PublishMessage((MessageCenterMessage)new,2
(PlayerAction)null);,2
cuCat.Id,2
this.Combat.FindCombatantByGUID(this.hitInfo.targetId),2
too,2
);,2
ammoWeapons.Remove(weapon);,2
(CustomAmmoCategories._shellsEffectsQueue.ContainsKey(wGUID),2
((UnityEngine.Object)autoPoolObject,2
\bulletProperty.DeclaringType.GetProperty("\FiringComplete"\);\,2
\typeof(MechValidationRules).GetMethod("\AddErrorMessage"\,\,2
\__instance.weapon,\,2
\contains:"\\,2
CustomAmmoCategories._shellsEffectsQueue[wGUID].Count,2
starty,2
CustomAmmoCategories.find(weapon.AmmoCategory.ToString());,2
cell.BurningWeapon;,2
\CustomAmmoCategories.findWeaponRealCategory(__instance.Description.Id,\,2
float>();,2
\//typeof(WeaponEffect).GetMethod("\OnImpact"\,\,2
\CustomAmmoCategory("\\,2
(hitIndex,2
lastBulletUID.Add(gameObject.GetInstanceID());,2
\typeof(BallisticEffect).GetMethod("\PlayMuzzleFlash"\,\,2
((CustomAmmoCategories.IsJammed(__instance.DisplayedWeapon),2
extAmmoDef.SurfaceImpactDesignMaskId),2
bullet.hitInfo.attackSequenceId,2
one,2
startingTransform.position,2
Prepare(),2
Joel,2
\queue:"\\,2
\//__instance.HandleKnockdown(-1,\,2
nor,2
OnComplete,2
\2,\,2
custCat;,2
((double)duration,2
Apply,2
\MineFieldHelper.registredMovingDamage.Add(__instance.GUID,\,2
categories,2
damageJammCoeff,2
iheat;,2
extAmmo.ShotsWhenFired),2
TryParce,2
duration;,2
bulletProperty,2
weapon;,2
resolve,2
(object)hitIndex);,2
\gameState.PilotRoster.ElementAt(0).AddAbility("\"\);\,2
extended,2
custCat.BaseCategory.ToString(),2
ammoCategoryList1),2
\(Dictionary<MechValidationType,\,2
registred,2
\heat:"\\,2
extAmmo.HeatDamagePerShot),2
//__instance.CheckForInstability();,2
\//WeaponEffect_Fire.Invoke(__instance,\,2
\Transpilers.MethodReplacer(instructions,\,2
id,2
list,2
index1,2
LaserEffect;,2
mineField.instability;,2
(shrapnelHitRecord.shellsSubEffect,2
\cell\n"\);\,2
subscriber);,2
20;,2
bullets[currentBullet];,2
fullCount[box.ammoDef.Description.Id],2
SurfaceImpactDesignMaskId,2
от,2
\CustomAmmoCategoriesLog.Log.LogWrite("\WeaponEffect.PlayProjectile\,2
__instance.weapon.defId,2
gen.Emit(OpCodes.Ret);,2
replacementMethod,2
Waypoints);,2
shrapnelHitRecord.startPosition;,2
CustomAmmoCategories.items[def];,2
method);,2
\//__instance.AddAbsoluteInstability(instability,\,2
\AccessTools.Property(typeof(Weapon),\,2
errorMessages;,2
extWeapon.IsAAMS,2
\typeof(WeaponEffect).GetField("\endPos"\,\,2
out,2
Postfix(FootstepManager,2
gameInstance.DataManager,2
__instance.InitProjectile();,2
__instance.preFireDuration;,2
(SequenceFinished)null);,2
((double)__instance.attackSequenceNextDelayMin,2
_scorchMaterial;,2
DesignMaskDef,2
moveSequence,2
1st,2
\typeof(BulletEffect).GetMethod("\PlayPreFire"\,\,2
sdm,2
\AttackSequenceImpactMessage(__instance.hitInfo,\,2
\(ActorMovementSequence)typeof(MechMeleeSequence).GetField("\moveSequence"\,\,2
ecell.y,2
this.hitInfo.hitLocations[this.hitIndex],2
(object)startPos);,2
endy,2
\Vector2.one,\,2
part,2
Add,2
startx,2
burning,2
себе,2
\seq:"\\,2
\DFA\n"\);\,2
don't,2
__instance.Combat.MessageCenter.PublishMessage((MessageCenterMessage)new,2
оси,2
replacementMethod);,2
HashSet<string>,2
Waypoints,2
\mf:"\\,2
Build,2
amunitionAmmoType.ToString(),2
((UnityEngine.Object)projectileParticles,2
(weapon,2
конец,2
weaponAmmoType.ToString(),2
curDelta;,2
0.0,2
снаряд,2
component);,2
typeof(float),2
\6,\,2
filename,2
weaponEffect,2
\BindingFlags.NonPublic).SetValue(bullet,\,2
Postfix(BallisticEffect,2
hitInfo,2
AccessTools.all);,2
__instance.bulletPrefab.name,2
shrapnelHitRecord);,2
context,2
firePrefab,2
component.Play(true);,2
component.transform.LookAt(endPos);,2
X,2
TerrainMaskFlags,2
\StabilityChangeSource.Attack,\,2
[HarmonyPatch(typeof(WeaponDef))],2
\FloatieMessage.MessageNature.Debuff,\,2
\location:"\\,2
modeId),2
gen,2
\BattleTech.ShopDefItem("\mechdef_atlas_AS7-D-HT"\,\,2
\typeof(WeaponEffect).GetField("\emitterIndex"\,\,2
information,2
Projectile,2
HashSet<int>();,2
that,2
fire,2
build,2
BTCustomRenderer.SetVFXMultiplier(component);,2
component.Clear(true);,2
(this.hitInfo.hitLocations[this.hitIndex],2
ComVisible,2
(object)hitInfo.hitPositions[hitIndex]);,2
(weapon.weaponDef.ProjectilesPerShot,2
1),2
dm.GetILGenerator();,2
BulletEffect;,2
shrapnelHitIndex,2
expectedHeat,2
IEnumerable<CodeInstruction>,2
4.0),2
BindingFlags.NonPublic);,2
__instance.hitInfo.attackSequenceId,2
custCat);,2
ams,2
need,2
COM,2
string>();,2
Prefix(WeaponDef,2
Moving,2
__instance.weapon);,2
\CustomAmmoCategories.getShrapnelCache(hitInfo,\,2
curDelta,2
\needed.\n"\);\,2
\FIRE"\,\,2
shrapnelHitRecord.count,2
targetPropertyGetter,2
\bullet.Fire(__instance.hitInfo,\,2
worldTreePos,2
Mech),2
(object)startingTransform);,2
aHitGroupIndex,2
bulletHitIndex;,2
(__result,2
cuCat.Id;,2
(MineFieldHelper.hasRegistredMovingDamage(__instance.OwningMech)),2
\(List<WayPoint>)typeof(ActorMovementSequence).GetProperty("\Waypoints"\,\,2
ammoShots),2
curCount[box.ammoDef.Description.Id],2
\bulletProperty.GetSetMethod(true).Invoke(__instance,\,2
component.transform.parent,2
\weapon.StatCollection.Set<string>(CustomAmmoCategories.WeaponModeStatisticName,\,2
weapon.parent.GUID,2
gameObject.GetComponent<AutoPoolObject>();,2
effectiveSeparatedDamage,2
\$"\{weapon.Name}\,2
\mf.VFX,\,2
(MineFieldHelper.registredMovingDamage.ContainsKey(__instance.GUID),2
path,2
BallisticEffect_FireNextBulletShell.watchdog.Start();,2
best,2
hitInfo.hitLocations[hitIndex],2
\Dictionary<ICombatant,\,2
\hi:"\\,2
__instance.weapon.DamagePerShotAdjusted(__instance.weapon.parent.occupiedDesignMask)));,2
TreeInstance[0],2
(string.IsNullOrEmpty(ammoId),2
(float)box.CurrentAmmo;,2
weapon.weaponRep.WeaponEffect,2
\CustomAmmoCategoriesLog.Log.LogWrite("\Can't\,2
errorMessages,2
(object)currentBullet);,2
\burn:"\\,2
parameters:,2
isMineField,2
isBurning,2
called,2
mode.Key);,2
(float)box.AmmoCapacity;,2
\CustomAmmoCategoriesLog.Log.LogWrite("\Nor\,2
(CustomAmmoCategories.items.ContainsKey(def)),2
\this.hitIndex,\,2
__instance.weaponRep.vfxTransforms[emitterIndex];,2
componentInChildren.StopAnimation();,2
4f;,2
\(int)ArmorLocation.LeftLeg,\,2
bestAmmo,2
\autoPoolObject.Init(__instance.weapon.parent.Combat.DataManager,\,2
instructions),2
(CustomAmmoCategories.isWRJammed(__instance.DisplayedWeapon),2
\jresp["\error"\]\,2
project,2
damage;,2
Combat.FindCombatantByGUID(targetGUID),2
\System.IO.Path.Combine(TSTPath,\,2
hitInfo);,2
componentInChildren.PlayAnimation();,2
(object)shrapnelHitRecord.startPosition);,2
weapon.ShotsWhenFired;,2
((double)__instance.projectileSpeed,2
(__instance.OwningMech,2
BallisticEffect_FireNextBulletShell.watchdog.Stop();,2
movingDamage);,2
\fire:"\\,2
ClusterCount,2
we,2
\(int)typeof(BallisticEffect).GetField("\currentBullet"\,\,2
\typeof(AbstractActor),\,2
List<Text>>)args[0];,2
\targetPropertyGetter,\,2
++currentBullet;,2
ecell.x,2
\//__instance.AddExternalHeat("\BurningCell"\,\,2
CustomAmmoCategories.findByIndex(ammoCategory);,2
ammoCategory.Index),2
((UnityEngine.Object)component,2
affected,2
\"\)\n"\);\,2
\CustomAmmoCategories.shrapnelFireShells(__instance.hitInfo,\,2
(object)1.0f);,2
\CustomAmmoCategories.setupShellsBullets(__instance.weapon,\,2
(CustomAmmoCategories.IsCooldown(__instance.DisplayedWeapon),2
(object)__instance.weapon.DamagePerShotAdjusted(__instance.weapon.parent.occupiedDesignMask),2
https://stackoverflow.com/a/4358250/1976,2
\string.Empty,\,2
base.OnComplete(),2
CustomAmmoCategories.getWeaponMode(weapon);,2
Combat.MessageCenter.PublishMessage((MessageCenterMessage)new,2
https://docs.microsoft.com/en-us/dotnet/api/system.reflection.emit.dynamicmethod.-ctor?view=netframework-3.5#System_Reflection_Emit_DynamicMethod__ctor_System_String_System_Type_System_Type___System_Type_,2
expectedDamage,2
Terrain.activeTerrain.transform.position;,1
FootstepManager_scorchMaterial,1
startingTransform;,1
if(trigger_ammo,1
unit),1
hitInfo.GetFirstHitLocationForTarget(actorByGuid.GUID);,1
WeaponEffect.WeaponEffectState.Complete;,1
(cecell,1
-1f);,1
\CustomAmmoCategoriesLog.Log.LogWrite(attacker.DisplayName+"\\,1
\[HarmonyPatch("\ExecuteMelee"\)]\,1
\"\+currentBullet+"\\n"\);\,1
using,1
false)),1
projectileParticles.GetComponentInChildren<BTLightAnimator>(true);,1
\"\+ancorType.Assembly.FullName+"\\n"\);\,1
PreferFiringSolutionWhenExposedAllyPositionalFactor_EvaluateInfluenceMapFactorAtPosition,1
encounterLayerCells,1
MechDFASequence_CompleteOrders,1
(CustomAmmoCategories.WeaponDef.ContainsKey(id)),1
ammoClusterWeapon,1
extDef.AmmoCategory;,1
cecell.AddTerrainMask(TerrainMaskFlags.Custom);,1
hitDamage));,1
data.size.x,1
argTypes,1
HUD.MechWarriorTray.MoveButton.ExecuteClick();,1
\BattleTech.ShopDefItem("\mechdef_highlander_HGN-733P"\,\,1
/*if,1
(effectPerProjectile,1
функцию,1
which,1
;),1
\JsonConvert.DeserializeObject<Dictionary<TerrainMaskFlags,\,1
amsLEffect,1
(object)false);,1
'*',1
instance.allAffectedTargetIds.Count;,1
(new,1
ShellHitsRecord,1
\GameObject>(DynamicMapHelper.VFXDepsLoaded),\,1
shellsSubEffect.Reset();,1
\AOEInfo.hitInfo.toHitRolls.CopyTo(hitInfo.toHitRolls,\,1
associated,1
\typeof(MultiTargetAttackOrderInfo),\,1
instantiating,1
ap.y,1
\CustomAmmoCategoriesLog.Log.LogWrite("\WeaponEffect.PlayMuzzleFlash\,1
\"\OnImpact"\,\,1
weapon.ammoBoxes[aGUID].CurrentAmmo,1
\BindingFlags.NonPublic).GetGetMethod(true).Invoke(moveSequence,\,1
\heat,\,1
ecell.mapMetaData.mapTerrainDataCells.GetLength(1)),1
without,1
\диагонали,\,1
cecell.CustomDesignMask,1
main,1
different,1
\Vector3.Distance(startPos,\,1
__instance.Combat.AttackDirector.RemoveAttackSequence(attackSequence.id);,1
cell.mapMetaData.mapTerrainDataCells.GetLength(1),1
оптимизация,1
\hitInfo\n"\);\,1
(CustomAmmoCategories._shellsEffectsQueue.ContainsKey(wGUID)),1
MineFieldInstability(this,1
\targetMech.IsEvasive,\,1
__instance.preFireDuration,1
(float)this.weapon.ShotsWhenFired);,1
__result.ToString());,1
message1,1
\popup.AddButton("\No"\,\,1
List<BallisticEffect>>,1
counterd,1
\moveSequence.FinalPos,\,1
(avaibleAmmo.Count,1
newWaypoints;,1
if(BallisticEffect_FireNextBulletShell.watchdog.ElapsedMilliseconds,1
++y),1
exclude,1
target.ArmorForLocation(location)),1
reworked,1
Vector3.zero;,1
\CustomAmmoCategories.FireNextAMSBullet(AMSBallistic,\,1
meleeSequence);,1
Postfix(ActorMovementSequence,1
bullet.hitInfo;,1
\AccessTools.TypeByName("\MechComponent_UIName"\);\,1
Terrain.activeTerrain.terrainData.treeInstances[treeIndex];,1
ancor,1
\CustomAmmoCategories.FireAMS(weapon,\,1
\COM,\,1
startTransformObject.transform.rotation,1
используется,1
\CustomAmmoCategoriesLog.Log.LogWrite("\detecting\,1
EnumValueToEventId,1
mech,1
CustomAmmoCategories.WeaponDef[id];,1
[HarmonyPatch(typeof(CombatHUDWeaponSlot))],1
targetMech.GetPossibleHitLocations(unit);,1
\AttackInvocation(actor,\,1
hInfo.hitPositions[projectileHitIndex];,1
hitInfo.numberOfShots,1
consolidateHitsCount;,1
Numbers,1
(UnityEngine.Object)__instance.projectile,1
MechValidationLevel,1
lmVFX.goVFX);,1
this.shellsSubEffect.weapon;,1
iterative,1
\depleeded\n"\);\,1
low,1
scale.y,1
\defTemp.Remove("\ShrapnelWeaponEffectID"\);\,1
spread,1
\"\("\\,1
\combatantByGuid.GameRep.PlayImpactAnim(__instance.hitInfo,\,1
\BattleTech.ShopDefItem("\Gear_Cockpit_Majesty_M_M_MagestrixAlpha"\,\,1
weaponAmmoType,1
getWeaponPredictionToHeatModifier(WeaponDef,1
IConvertible,1
aGUID),1
1270000));,1
720000));,1
чтобы,1
из,1
projectileParticles,1
scale.x,1
circle,1
combat,1
\id:"\\,1
extWeapon.baseModeId;,1
\CustomAmmoCategories.getCachedBulletCurve(hitInfo,hitIndex);\,1
\typeof(BallisticEffect).GetMethod("\SetupBullets"\,\,1
GO,1
AttackSequenceWatchDogHelper.StartWatchDogThread();,1
TripleBoolean.NotSet;,1
\__instance.weapon.parent.Combat.DataManager.PooledInstantiate(__instance.preFireVFXPrefab.name,\,1
curvyInfo.UnitySpline.Clear();,1
Log.LogWrite(e.ToString(),1
shellsQueue,1
(CustomAmmoCategories.isWeaponHasClusterAmmo(weapon)),1
\CustomAmmoCategoriesLog.Log.LogWrite("\\n"\);\,1
\"\+mode.Key+"\\n"\);\,1
HashSet<object>,1
\AMSLaserEffect.Fire(amsHit,\,1
General,1
FootstepManager_AddScorch.strongScorches.Add(persistent);,1
MechJumpSequence_CompleteOrders,1
ActorMineFieldVFX(),1
emenies,1
e.ToString());,1
expectedHeat),1
MineFieldFXMinDistance(this,1
foreach(AmmunitionBox,1
\"\ecm_enter"\,\,1
manifests,1
if(FootstepManager_AddScorch.strongScorches[t],1
__instance.Combat.MapMetaData.GetCellAt(finalPosition),1
DynamicMapHelper.lastMineFieldFXPlayedPosition[unit],1
Start,1
BurstBallisticEffect,1
(dngerOnImpact),1
CustomAmmoCategories.getExtWeaponDef(weapon.defId).Modes.Count,1
MineFieldVFX(this,1
\[HarmonyPatch("\AmmoCategoryToAmmoId"\)]\,1
\typeof(MechMeleeSequence).GetField("\meleeSequence"\,\,1
2790000));,1
\__instance.PlayVFXAt((Transform)null,\,1
gameObject.GetComponentInChildren<BTLightAnimator>(true);,1
(shot,1
\[HarmonyPatch("\PlayProjectile"\)]\,1
tempExpectedDamage;,1
typeof(BallisticEffect));,1
ProjectilesPerShot(Weapon,1
\material:"\+_scorchMaterial.name+"\\n"\);\,1
\CustomAmmoCategories.registerShellsEffects(__instance,\,1
\hi:"\+hitIndex+"\\n"\);\,1
Queue<BallisticEffect>>();,1
\[HarmonyPatch("\ProcessScorches"\)]\,1
treeInstances[t].widthScale+,1
CustomAmmoCategories.Settings.JumpLandingMineAttractRadius);,1
trajectory,1
\"\="\\,1
effect),1
\Combat.DataManager.ResourceLocator.EntryByID(prefabName,\,1
BindingFlags.NonPublic),1
this.PlayPreFire();,1
\fail\n"\);\,1
center,1
\"\104.dat"\);\,1
//treeInstances[t].widthScale,1
//ParticleSystem,1
0.05f;,1
List<VFXPoolGameObject>();,1
\GenericPopupBuilder.Create(GenericPopupType.Info,\,1
curvyInfo.UnitySpline.Refresh();,1
\List<Weapon>(),\,1
targetMech.OverheatLevel),1
HostileDamageFactor_expectedDamageForShooting,1
bullets.Count)),1
\CustomAmmoCategoriesLog.Log.LogWrite("\MechMeleeSequence.GenerateMeleePath.\n"\);\,1
Heat,1
\Shader.SetGlobalFloatArray("\_BT_ScorchAlpha"\,\,1
\enemies\n"\);\,1
\CustomAmmoCategoriesLog.Log.LogWrite("\MechMeleeSequence.BuildMeleeDirectorSequence\n"\);\,1
\CustomAmmoCategoriesLog.Log.LogWrite("\cell\,1
versionManifestEntry.IsResourcesAsset,1
enemies[0].DisplayName,1
subeffect,1
(encounterLayerCells.Count,1
140000));,1
\expectedDamage:"\\,1
manifests.Value),1
controlled,1
\(Action<BulletEffect,\,1
Stopwatch();,1
\category:"\\,1
всего,1
\"\ShotsWhenFired"\).GetGetMethod();\,1
OnImpact,1
\//CustomAmmoCategoriesLog.Log.LogWrite("\Shell\,1
if(mech,1
Box,1
shrapnelHitRecord.bulletsInFly.Add(hitIndex);,1
MineFieldDamage,1
(CustomAmmoCategories.AmmunitionDef.ContainsKey(id)),1
\"\vfxPrfPrtl_artillerySmokeSignal_loop"\;\,1
\dependencyLoad.RequestResource(BattleTechResourceType.Prefab,\,1
Minor,1
what,1
\EvasivePipsIgnored\n"\);\,1
data,1
cell.BurningWeapon.parent;,1
effectsIDs;,1
ComponentType.AmmunitionBox,1
newState.GetType().ToString());,1
curLevel,1
Major,1
\[HarmonyPatch("\RefreshDisplayedWeapon"\)]\,1
\hex:"\\,1
fullBulletsCount,1
\(int)VehicleChassisLocations.Rear,\,1
BattleTech.SimGameState.SimGameType.CAREER),1
CustomAmmoCategories.ShellsWeaponEffectId,1
красоты,1
1300000));,1
object,1
\object>)typeof(AssetBundleManager).GetField("\"\);\,1
getWeaponAvaibleAmmoForMode(Weapon,1
bestAmmo);,1
AttackDirection.FromArtillery,1
\weaponsList,\,1
\(int)VehicleChassisLocations.Right,\,1
MeleeAttackType.NotSet),1
trgAlly,1
mechDef.Inventory[index];,1
if(hitInfo.attackSequenceId,1
(hitInfo.isAOEHitInfo()),1
this.trees),1
\path:"\+TSTPath+"\\,1
DynamicTreesHelper.clearTrees();,1
\Ready!"\,\,1
наклона,1
shellsHitIndex,1
\MapPoint.calcMapCircle(C,\,1
передаем,1
immune,1
ATTACK,1
fieldVFX;,1
CustomAmmoCategories._shellsEffectsQueue[wGUID].Dequeue();,1
component.GetInstanceID(),1
\__instance.muzzleFlashVFXPrefab.name,\,1
resolveDamageMessage,1
end,1
happend,1
projectileParticles.Clear(true);,1
(fullCount.ContainsKey(box.ammoDef.Description.Id),1
++x),1
int>));,1
\BattleTech.ShopDefItem("\Gear_TargetingTrackingSystem_RCA_InstaTrac-XII"\,\,1
__instance.hitInfo;,1
internal,1
__instance.shotDelay,1
fieldVFX.lastVFXPos);,1
ammoClusterWeapon),1
\vfx\n"\);\,1
redrawTreeDatas,1
\CustomAmmoCategories.calcHeatCoeff(unit,\,1
(shellsSubEffect,1
CustomAmmoCategories.getAmmoAmmoCategory(box.ammoDef);,1
Lower,1
sdm.Value);,1
((UnityEngine.Object)componentInChildren,1
[HarmonyPatch(typeof(MechDFASequence))],1
Normal,1
ClearWeaponShellEffects(string,1
(tempExpectedDamage,1
encounterLayerCells[0].relatedTerrainCell,1
ammoBox,1
\"\."\\,1
transformList.Last()));,1
modeWeapons,1
\"\CustomAmmoCategoriesSettings.json"\);\,1
CustomAmmoCategories.AmmunitionDef[id];,1
projectileTransform.LookAt(endPos);,1
AttackDirection[1],1
weaponDirectFireModifier,1
\(weapon.weaponDef.ComponentTags.Contains("\wr-clustered_shots"\)\,1
TripleBoolean,1
икс,1
\Become:"\\,1
BallisticEffect_SetupBulletsShell,1
Rest,1
\(ParticleSystem)typeof(WeaponEffect).GetField("\projectileParticles"\,\,1
\investigating\n"\);\,1
\[HarmonyPatch("\AmmoCategoryToAmmoBoxId"\)]\,1
ammoHeatWeapons),1
(gameState,1
CustomAmmoCategories.getDirectFireModifier(weapon);,1
(!__instance.AllowMissSkipping,1
ShellHitRecord>>>>();,1
(hitInfo.attackSequenceId,1
transformList,1
\OnMeleeReady().\n"\);\,1
\CustomAmmoCategoriesLog.Log.LogWrite("\WeaponEffect.PlayPreFire\,1
specify,1
terrainMaskFlags),1
shrapnelHitRecord.hitInfo.numberOfShots);,1
\CustomAmmoCategoriesLog.Log.LogWrite("\draw\,1
AMSBallistic,1
\(CombatGameState)typeof(MechComponent).GetField("\combat"\,\,1
\Text("\EXTRA\,1
400000));,1
умножением,1
\(uint)EnumValueToEventId.Invoke(SceneSingletonBehavior<WwiseManager>.Instance,\,1
WorkOrderEntry_MechLab,1
оригинальной,1
CustomAmmoCategories.popWeaponShellsEffect(weapon);,1
mode.IsAAMS,1
\Path.Combine(settings_filename,\,1
630000));,1
hitLocations.Length;,1
ballisticEffect,1
dmaskids,1
fullCount,1
Перетасовка,1
!actorByGuid.IsDead),1
((UnityEngine.Object)projectileLightObject,1
(float)shrapnelHitRecord.count;,1
mfDamage.BurnHeat,1
enemy,1
\(List<Weapon>)typeof(MechMeleeSequence).GetField("\requestedWeapons"\,\,1
\AudioEventList_ecm\n"\);\,1
(JammingEnabler.jammQueue.Count,1
this.deleteTrees(redrawTreeDatas);,1
\CustomAmmoCategoriesLog.Log.LogWrite("\MechMeleeSequence.ExecuteMelee.\n"\);\,1
DynamicMapHelper.mapMetaData.GetXIndex(pos.x);,1
\CustomAmmoCategories.AMSFire(ballisticEffect,\,1
\CustomAmmoCategoriesLog.Log.LogWrite("\Checking\,1
treeInstances[t].prototypeIndex+,1
\DynamicMapHelper.applyImpactMapChange(weapon,\,1
\(Dictionary<string,\,1
extAmmoDef.MineFieldInstability;,1
Prefix(FootstepManager,1
(object)settingsJson,1
CombatHUDWeaponSlot_RefreshDisplayedWeapon,1
getWeaponDesignImpactMask(Weapon,1
\BattleTech.ShopDefItem("\Weapon_Gauss_Gauss_2-M9"\,\,1
executing,1
(fieldVFX,1
4)||(localDate.Day,1
\AccessTools.Method(typeof(BallisticEffect_SetupBulletsShell),\,1
AOEInfo,1
objectSpawnData.spawnedObject.transform.localScale,1
buildin,1
\[HarmonyPatch("\OnBulletImpact"\)]\,1
target.z,1
__instance.MessageIndex);,1
ShotsWhenFiredDisplayOverider(Weapon,1
(double)__instance.preFireDuration,1
unsepDmgM;,1
(enemies.Count,1
true;},1
fullCount),1
AMSFire(WeaponEffect,1
(AbstractActor,1
CustomAmmoCategories.pushWeaponShellsEffect(shellsSubEffect);,1
\FIELD"\;\,1
(object)preFireRate);,1
ScorchMaterial,1
localization,1
fullBulletsCount;,1
\1f)).normalized,\,1
2,1
missile.hitIndex,1
weapon));,1
false;},1
Cycling,1
directFireModifier,1
Mech;,1
WeaponEffect_Fire;,1
симулятора,1
\weapon.parent,\,1
OnBulletImpact,1
/*List<Weapon>,1
0.5f;,1
(!((UnityEngine.Object)__instance.muzzleFlashVFXPrefab,1
DynamicMapHelper.lastMineFieldFXPlayedPosition[unit];,1
\this.Combat.MessageCenter.AddSubscriber(MessageCenterMessageType.AddSequenceToStackMessage,\,1
\Quaternion.LookRotation(moveSequence.FinalHeading),\,1
this.spawnedObject.GetComponent<ParticleSystem>();,1
starty;,1
((encounterLayerCells,1
ammoId;,1
\(typeof(FootstepManager)).GetField("\_scorchMaterial"\,\,1
\tree:"\+\,1
\AssemblyVersion("\1.0.*"\)]\,1
\"\:\n"\);\,1
watchdog,1
acell.MineField.Add(new,1
float[],1
(hitInfo.hitLocations[hitIndex],1
AOEHitsInfo[aHitGroupIndex].targetGUID,1
\"\vfxPrfPrtl_fireTerrain_lrgLoop"\;\,1
\__instance,ref\,1
CACWeaponEffect_FiringCompleteSet,1
\"\;\,1
клиента,1
\CustomAmmoCategories.CycleAmmo(weapon,true);\,1
BuildWeaponEffectOnComplete();,1
aGUID,1
if(Math.Abs(curDelta-delta),1
\BattleTech.ShopDefItem("\Gear_TargetingTrackingSystem_Hartford_S2000"\,\,1
(CustomAmmoCategories._shellsEffectsQueue[wGUID].Count,1
this.weapon.ProjectilesPerShot,1
CurvyInterpolation.Bezier;,1
\CustomAmmoCategoriesLog.Log.LogWrite("\SetupBullets\,1
\BattleTech.ShopDefItem("\Weapon_LRM_LRM10_3-Zeus"\,\,1
угол,1
0.1f),1
attackSequenceNextDelayTimer,1
MechMeleeSequence_CompleteOrders,1
this.OnImpact(this.weapon.DamagePerShotAdjusted(this.weapon.parent.occupiedDesignMask),1
2.0f;,1
\dataManager,\,1
\wId:"\+\,1
mode.Value.AIHitChanceCap,1
\компании:"\\,1
линия,1
\AdditinalMaterials["\SolidColor"\]\,1
\result.Add("\"\);\,1
object[2],1
\weapon.StatCollection.AddStatistic<string>(CustomAmmoCategories.WeaponModeStatisticName,\,1
__instance.projectilePrefab.name);,1
\(weapon.parent.HasLOFToTargetUnit(target,\,1
shown,1
MultiAttack_PartitionWeaponListToKillTarget,1
BallisticEffect)),1
extWeapon.Modes),1
\interrupt\n"\);\,1
//Terrain.activeTerrain.terrainData.treeInstances,1
\[HarmonyPatch("\scorchMaterial"\)]\,1
Проверяем,1
Пока,1
(CustomAmmoCategories.getWeaponHasShells(weapon)),1
RealityMachina,1
loadedBundles,1
посылаем,1
\response,\,1
\CustomAmmoCategoriesLog.Log.LogWrite("\getWeaponAmmoCategory("\+weapon.defId+"\)\n"\);\,1
[HarmonyPatch(typeof(QuadTree))],1
(double)__instance.attackSequenceNextDelayMax),1
mode.AmmoCategory,1
MineFieldHeat(this,1
Tired,1
\instab,\,1
(curvyInfo.UnitySpline,1
shrapnelHitRecord.bulletsInFly.Remove(hitIndex);,1
ammo.IsAMS,1
\CustomAmmoCategoriesLog.Log.LogWrite("\ActorMovementSequence.CompleteOrders\,1
\typeof(bool),\,1
mechComponentRef,1
amsHit,1
540000));,1
modify,1
\meleeSequence.SetCamera(__instance.cameraSequence,\,1
if(CustomAmmoCategories.Settings.Joke,1
CustomAmmoCategories.getWeaponEffect(amsShoot.AMS),1
(DynamicMapHelper.lastMineFieldFXPlayedPosition.ContainsKey(unit)),1
value;,1
940000));,1
shrapnelHitRecord.shellsHitIndex);,1
width,1
Vector3.one;,1
curvyInfo.UnitySpline.Closed,1
ToHit_GetAllModifiersDescription,1
\CustomAmmoCategoriesLog.Log.LogWrite("\Start\,1
\(string)defTemp["\ShrapnelWeaponEffectID"\];\,1
(mf,1
empty,1
\Dictionary<MechValidationType,\,1
\typeof(WwiseManager).GetMethod("\EnumValueToEventId"\).MakeGenericMethod(type);\,1
cecell.CustomDesignMask.Description.Name,1
CACWeaponEffect_FiringCompleteGet,1
CACWeaponEffect_ActiveGet,1
attacker.Combat.FindCombatantByGUID(targetHitCache.Key);,1
импакт,1
GameObject();,1
((UnityEngine.Object)gameObject,1
\manager\n"\);\,1
__instance.attackSequenceNextDelayMax;,1
hitInfo.attackWeaponIndex,1
(!ammoCategoryList1.Contains(ammoCategory)),1
\File.AppendAllText(Log.m_logfile,\,1
shellsEffect,1
CustomAmmoCategories.getAvaibleEffectiveAmmo(weapon);,1
ammoClusterWeapon.Add(weapon);,1
PlayMuzzleFlash,1
makes,1
xlimit),1
amsrec.weaponCountred.Add(missile.weaponIndex);,1
extWeapon.IsAMS,1
рост,1
(lastBulletUID.Contains(gameObject.GetInstanceID())),1
MineFieldCount(this,1
team),1
AND,1
trigger_mode),1
cell.trees.Add(t);,1
TreeInstance,1
scorch,1
\Exception:"\\,1
байт,1
ammo/mode,1
\CustomAmmoCategoriesLog.Log.LogWrite("\setup\,1
Number,1
currentBulletBorder),1
apply,1
__instance.attacker.HandleDeath(__instance.attacker.GUID);,1
(hitLocation,1
\BattleTech.ShopItemType.AmmunitionBox,\,1
местами,1
bullets.Add(component);,1
float[0],1
(combatant,1
AttackStackSequence,1
category,1
pHitIndex);,1
ActorMineFieldVFX>,1
(CustomAmmoCategories.isWeaponHasDiffirentAmmo(weapon),1
\transform\n"\);\,1
Expected,1
MineFieldSFX(this,1
\Vector3(Random.Range(0.0f,\,1
HashSet<string>();,1
(string.IsNullOrEmpty(activeProjectileName)),1
switchToMostClusterAmmo(Weapon,1
fireEffects,1
\BattleTech.ShopDefItem("\mechdef_atlas_AS7-D"\,\,1
System.Uri(Assembly.GetExecutingAssembly().CodeBase)).AbsolutePath;,1
\int>)dm.CreateDelegate(typeof(Action<BulletEffect,\,1
\направо,\,1
ошибку,1
\BattleTech.ShopDefItem("\Gear_HeatSink_Generic_Double"\,\,1
\(Dictionary<BattleTechResourceType,\,1
\Text("\MISSING\,1
weapon.ammoBoxes),1
justAddedBurnedTreeData,1
weapon.ammoBoxes[index].ammoDef.Description.Id),1
Читаем,1
modeWeapons.Add(weapon);,1
\(ICombatant)typeof(MechJumpSequence).GetField("\DFATarget"\,\,1
fieldVFX.lastVFXPos,1
\"\-"\\,1
List<VFXPoolGameObject>,1
\(GameObject)typeof(WeaponEffect).GetField("\projectileMeshObject"\,\,1
exploding,1
(!ammoCategoryList2.Contains(amunitionAmmoType)),1
Math.Abs(toHit,1
WeaponEffect_OnComplete;,1
MineField,1
forceInactive);,1
\typeof(BulletEffect),\,1
\shrapnelHitIndex,\,1
\typeof(FootstepManager).GetField("\_scorchMaterial"\,\,1
WeaponEffect_PlayPreFire,1
\CustomAmmoCategoriesLog.Log.LogWrite("\MissileLauncherEffect_AllMissilesComplete\,1
\versionManifestEntry.AssetBundleName+"\\n"\);\,1
cacwe.ActiveCAC;return,1
string>,1
PreferNotLethalPositionFactor_expectedDamageForShooting,1
curvyInfo.splineObject,1
\dmask\n"\);\,1
(transformList,1
HUD.MechWarriorTray.ConfirmAbilities(AbilityDef.ActivationTiming.ConsumedByMovement);,1
\(AssetBundleManager)assetsManagerProp.GetGetMethod().Invoke(Combat.DataManager,\,1
\,\,1
забываем,1
CustomAudioSource,1
//for,1
\(int)VehicleChassisLocations.Left,\,1
modeWeapons),1
\CustomAmmoCategoriesLog.Log.LogWrite("\trying\,1
def.refreshAmmo(dataManager);,1
(weapon.HeatDamagePerShot,1
\dmaskids.Add(sdm.Key,\,1
\AMSBallistic.Fire(amsHit,\,1
BulletEffect)||(__instance,1
combatant,1
\BattleTech.ShopDefItem("\mechdef_kingcrab_KGC-0000"\,\,1
cell.mapMetaData.mapTerrainDataCells.GetLength(0),1
360000));,1
scale,1
BindingFlags.Public,1
choose,1
\"\Неправильный\,1
short,1
def.Ammo.Description.Id,1
hi;,1
\if(CustomAmmoCategories.checkExistance(weapon.StatCollection,CustomAmmoCategories.WeaponModeStatisticName)\,1
\_shellsEffectsStorage.Add(wGUID,\,1
\CustomAmmoCategories.InitWeaponEffect(weaponRepresentation,\,1
\CustomAmmoCategoriesLog.Log.LogWrite("\popWeaponShellsEffect\,1
if(mode.Value.isBaseMode,1
GetAdjustedDamage,1
isWeaponHasDiffirentModes(Weapon,1
amsShoot.LAMSEffect;,1
\[HarmonyPatch("\InitProjectile"\)]\,1
VersionManifestEntry>>,1
enemyHarmony.GetPatchedMethods();,1
WeaponEffectFire(BulletEffect,1
__instance.FinalPos);,1
ap.y],1
\DynamicMapHelper.DataManager.PoolGameObject(key,\,1
requestedWeapons,1
AddSequenceToStackMessage(attackSequence.attacker.DoneWithActor()));,1
harmony.PatchAll(Assembly.),1
projectileParticles.Play(true);,1
combat.GetAllAlliesOf),1
types,1
startingTransform.position;,1
(!successfulParse),1
((UnityEngine.Object)combatantByGuid.GameRep,1
swtichToBestToHitMode(Weapon,1
ComponentType.Weapon),1
gameInstance.Simulation;,1
impactMessage.hitInfo.hitLocations[impactMessage.hitIndex],1
\ecell.mapMetaData.mapTerrainDataCells[x,y]\,1
++AOEHitIndex;,1
\//CustomAmmoCategories.shrapnelFireShells(__instance.hitInfo,\,1
\Combat.DataManager.PrecachePrefab(shellsEffect.bulletPrefab.name,\,1
avaibleAmmo,1
typeof(BulletEffect),1
Mech);,1
CustomAmmoCategories.ShellsWeaponEffectId);,1
ComponentDamageLevel.NonFunctional,1
\DynamicMethod("\CACBulletEffectWeaponEffectFire"\,\,1
\cell.mapMetaData.mapTerrainDataCells[ap.x,\,1
affectedPoints,1
if((__instance,1
AmmoCategory.Flamer.ToString()),1
((double)__instance.shotDelay,1
(acell,1
\__result.Append("\(CLDWN\,1
(registredMineFieldDamage.ContainsKey(combatant),1
prefab,1
\BattleTech.ShopDefItem("\Gear_HeatSink_Generic_Thermal-Exchanger-I"\,\,1
\__instance.ammoBoxes[index].Description.Id+"\\,1
BulletEffect_OnCompleteShell,1
\parentAudioObject,\,1
(extWeapon.IsAMS,1
CustomAmmoCategories.ClearWeaponShellEffects(wGUID);,1
MapMetaData.GetPriorityTerrainMaskFlags(cecell);,1
вынесена,1
\(Transform)typeof(WeaponEffect).GetField("\startingTransform"\,\,1
\(int)WwiseManager.PostEvent(__instance.preFireSFX,\,1
(numberOfShots,1
\CustomAmmoCategoriesLog.Log.LogWrite("\QuadTree.Insert:"\+counter+"\\n"\);\,1
CustomAmmoCategories._shellsEffectsStorage.Remove(wGUID);,1
this.FireNextBullet();,1
\ошибка,\,1
(dmaskids.ContainsKey(terrainMaskFlags)),1
\null:"\+(HUD.SelectionHandler.ActiveState.Orders==null));\,1
consists,1
CustomAmmoCategories.WeaponDef,1
__instance.Director.Combat;,1
\FloatieMessage(__instance.owningActor.GUID,\,1
persistent),1
\"\MELEE\,1
CustomAmmoCategories.switchToMostHeatAmmo(weapon);,1
shellsQueue.Enqueue(shellsEffect);,1
cecell,1
success,1
toHit:,1
target,1
\exception:"\+e+"\\n"\);\,1
\//data.SetTreeInstance(t,\,1
(DFATarget,1
\[HarmonyPatch("\FireNextBullet"\)]\,1
AIUtil_UnitHasLOFToUnit,1
Переменная,1
\"\Не\,1
BallisticEffect_FireShells,1
3000),1
getWeaponAmmoCategory(Weapon,1
If,1
\exists:"\+\,1
\CustomAmmoCategories.AMSFire(amsBEffect,\,1
mfDamage.debugPrint();,1
\(int)VehicleChassisLocations.Front,\,1
bother,1
\April.\n"\);\,1
(lmVFX.goVFX,1
500,1
missile.weaponIndex,1
SetWeaponAmmo(Weapon,1
\Terrain.activeTerrain.terrainData.SetTreeInstance(treeIndex,tree);\,1
DateTime.Now;,1
\Otherwise,\,1
bbEffect,1
startTransformObject.transform.position,1
(CustomAmmoCategories.isWeaponHasDiffirentModes(weapon),1
CustomAmmoCategories.findExtAmmo(def.Ammo.Description.Id).AmmoCategory.Index;,1
__instance.gameObject.GetComponent<CurvySpline>();,1
extAmmoDef.MineFieldHitChance;,1
4440000));,1
things,1
\FootstepManager.Instance.AddScorch(pos,\,1
\hitInfo.attackSequenceId+"\\,1
weaponMode,1
\CustomAmmoCategories.getAOEHitInfo(nullable.Value,\,1
List<Text>>,1
__instance.hitInfo.targetId;,1
\[HarmonyPatch("\SetupBullets"\)]\,1
MechMeleeSequence_setState,1
scale.z,1
\"\+prefabName+"\,"\+\,1
(CustomAmmoCategories.IsCooldown((Weapon)__instance),1
CustomAmmoCategories.AddBallisticEffectBullet(AMSBallistic);,1
applyMoveMineFieldDamageToVehicle(Vehicle,1
\locations\n"\);\,1
So,1
\Action(GoToWiki),\,1
int>,1
(,1
линию,1
\Vector3.zero,\,1
WeaponEffect_FireShell,1
isStationary),1
принятых,1
\CustomAmmoCategories.setWeaponAMSShootsCount(weapon,\,1
\BattleTech.ShopDefItem("\Gear_HeatSink_Generic_Thermal-Exchanger-II"\,\,1
ammunition,1
CustomAmmoCategories._shellsEffectsQueue.Remove(wGUID);,1
((weapon.ammoBoxes[aGUID].CurrentAmmo,1
gaussian,1
groundPos.y,1
\MapPoint.calcMapCircle(ccell.mapPoint(),\,1
\[HarmonyPatch("\PlayPreFire"\)]\,1
curCount,1
\ObjectSpawnDataSelf.playVFXAt(unit.Combat,\,1
20f;,1
m_assemblyFile;,1
requestedWeapons.Clear();,1
(CustomAmmoCategories.getWeaponDisabledClustering(weapon),1
projectileTransform.position,1
data.size.z,1
\FootstepManager.Instance,\,1
Vector2.zero,1
foreach(int,1
Joke,1
\BindingFlags.Instance).SetValue(__instance,\,1
calcHeatCoeff(AbstractActor,1
\25f),\,1
\AttackDirection.None,\,1
gameState,1
могу,1
\"\+cell.x+"\:"\+cell.y+"\\,1
amsrec.amsShooted,1
\"\AllBulletsComplete"\,\,1
\BattleTech.ShopDefItem("\Gear_TargetingTrackingSystem_Kallon_Lock-On"\,\,1
\_shellsEffectsQueue.Add(wGUID,\,1
_scorchMaterial.enableInstancing,1
extAmmoDef.statusEffects,1
Приведем,1
mode.Value.AIHitChanceCap);,1
weapon.parent.isAmmoEjecting(true);,1
CombatHUDWeaponSlot_UpdateToolTipsFiring,1
1520000));,1
\__instance.ammoBoxes[index].CurrentAmmo+"\\n"\);\,1
(endx,1
__instance.startingTransform.position;,1
delta:,1
Здесь,1
DataManager.InjectedDependencyLoadRequest(dataManager);,1
\CustomAmmoCategories.getWeaponDesignImpactMask(weapon,\,1
(__instance.cameraSequence,1
\"\+weaponAmmoCategory.Id+"\\n"\);\,1
CustomAmmoCategories.getWeaponBecomesDangerousOnImpact(weapon);,1
(string.IsNullOrEmpty(bestAmmo),1
\found\n"\);\,1
++shHitIndex),1
MechMeleeSequence_ExecuteMelee,1
\effects\n"\);\,1
BulletCurvyInfo,1
\component.Init(__instance.weapon,\,1
\defTemp["\statusEffects"\].ToString());\,1
\"\+target.DisplayName+\,1
\\n"\);\,1
this.startingTransform.position;,1
(object,1
testFireAMS(Weapon,1
AOEHitsInfo[aHitGroupIndex].damageList[aHitIndex],1
{__result,1
hitDamage),1
¯\_(ツ)_/¯,1
(string.IsNullOrEmpty(CustomAmmoCategories.ShellsWeaponEffectId),1
\typeof(DataManager).GetProperty("\AssetBundleManager"\,\,1
\CustomAmmoCategoriesLog.Log.LogWrite("\BulletBorder\,1
curCount[ammo.Key];,1
moving,1
(DirectStrike),1
TreeInstance[],1
playing,1
\AdditinalMaterials["\bullethole-decal"\];\,1
\(object)"\JAM"\\,1
just,1
manifest.Key,1
access,1
\CustomAmmoCategoriesLog.Log.LogWrite("\ballistic\,1
unsepDmgM,1
WeaponAmmoInfo>();,1
this.effectsIDs,1
(weapon.ammoBoxes[aGUID].IsFunctional,1
hitCount,1
lastVFXPos;,1
effectiveSeparatedDamage));,1
\__instance.owningActor.GUID,\,1
mechComponentRef.DamageLevel,1
\typeof(BallisticEffect).GetMethod("\ClearBullets"\,\,1
ylimit,1
\weaponDef,string\,1
visible,1
JammingEnabler.jammQueue.Enqueue(attackSequence.attacker);,1
Using,1
\long,\,1
\"\TemporarilyDisabled"\;\,1
weapon.uid;,1
if(CustomAmmoCategories.WeaponEffects[wGUID].ContainsKey(CustomAmmoCategories.ShellsWeaponEffectId),1
nameof(ProjectilesPerShot));,1
\path,\,1
targetAOEHitInfo),1
\popup.AddButton("\Yes"\,\,1
Postfix(MechDFASequence,1
data.size.y;,1
\//CustomAmmoCategories.findWeaponRealCategory(def.Ammo.Description.Id,\,1
-1),1
слева,1
ammoCategoryList2.Add(amunitionAmmoType);,1
BallisticEffect_OnBulletImpactShell,1
\typeof(WeaponEffect).GetMethod("\OnComplete"\,\,1
weapon.ammoBoxes.Count)),1
endy;,1
MechValidationType.AmmoMissing;,1
meleeSequence,1
(ancorType,1
MechDef,1
\"\+"\\,1
(FootstepManager_scorchMaterial.ScorchMaterial,1
cell.MineField.Count,1
\CustomAmmoCategoriesLog.Log.LogWrite("\Vehicle.OnMoveOrSprintComplete\n"\);\,1
ChooseBestWeaponForTarget(AbstractActor,1
\FloatieMessage.MessageNature.Buff,\,1
\"\+__instance.weapon.defId+\,1
\null"\)+"\\n"\);\,1
List<bool>,1
\hitInfo.attackGroupIndex+"\\,1
(Action<BallisticEffect>)dm.CreateDelegate(typeof(Action<BallisticEffect>));,1
попадание,1
shellsEffects,1
mechComponentRef.RefreshComponentDef();,1
animation,1
\__result.Append("\({0})"\,\,1
И,1
\missile.UnitySpline.Length,\,1
FootstepManager_AddScorch,1
Check,1
mode.IsAMS,1
Vehicle,1
lastVFXPos,1
\"\+((newState\,1
ammo.Value;,1
target.y,1
AmmunitionBoxDef;,1
(CustomAmmoCategories.getWeaponHasShells(__instance.weapon),1
(box.CurrentAmmo,1
\CustomAmmoCategoriesLog.Log.LogWrite("\getWeaponEvasivePipsIgnored\,1
получить,1
this.SetupBullets();,1
amsrec,1
(CustomAmmoCategories.isWeaponAOECapable(weapon)),1
separated,1
true,1
findAmunitionRealCategory(string,1
activeProjectileName,1
\__instance.MeleeTarget,\,1
AkGameObj,1
localDate,1
\{0})"\,\,1
redrawItem,1
\typeof(Enum).GetMethod("\TryParse"\,BindingFlags.Static,null,argTypes,null);\,1
Parent,1
WeaponEffect_Fire,1
_scorchAlphas,1
\trees:"\\,1
ePatchedmethod,1
\Vector3.Scale(treeInstances[t].position,\,1
presents:\nOut,1
WeaponEffect_PlayProjectileShell,1
boxAmmoCategory,1
\weaponEffect,\,1
amsrec.weapon.defId,1
\combatant,\,1
((double)__instance.attackSequenceNextDelayMax,1
extAmmoDef.MineFieldFXMinRange;,1
(!ammoCategoryList2.Contains(ammoCategory)),1
FootstepManager_scorchMaterial.ScorchMaterial,1
направление,1
preFireRate,1
\typeof(ActorMovementSequence).GetField("\meleeTarget"\,\,1
//bool,1
gameState.AddFunds(itm.price);,1
newState),1
Terrain.activeTerrain.terrainData.treeInstances;,1
overheating,1
nonClusterCoeff;,1
\CustomAmmoCategoriesLog.Log.LogWrite(prototype.name+"\:"\+z+"\,"\+x+"\\n"\);\,1
enemyPatchedMethods),1
weapon.weaponRep.vfxTransforms[0].localScale;,1
(dmaskids.ContainsKey(sdm.Key),1
cell),1
\inited.\n"\);\,1
affectedRaduis);,1
CustomAmmoCategories.WeaponEffects[wGUID][extWeapon.ShrapnelWeaponEffectID],1
MineFieldRadius(this,1
component.transform.localPosition,1
AddSequenceToStackMessage).sequence);,1
(string.IsNullOrEmpty(msg),1
\null)?"\null"\:"\not\,1
patch,1
baseWorkOrder))),1
\"\.isAMS\n"\);\,1
missile.missileProjectileSpeed);,1
if(fieldDamageRec,1
(CustomAmmoCategories._shellsEffectsStorage.ContainsKey(wGUID)),1
List<BallisticEffect>,1
BulletEffect_ImpactPrecacheCount,1
__instance.hitInfo.dodgeRolls[hitIndex],1
_scorchAlphas[t],1
delta),1
BallisticEffect_ImpactPrecacheCount,1
hx,1
BindingFlags.Instance);,1
c;,1
ylimit),1
limit,1
\(AkCallbackManager.EventCallback)null,\,1
.GetGetMethod();,1
groundPos,1
AbstractActor_HasIndirectLOFToTargetUnit,1
DFATarget,1
\missed,\,1
projectileParticles.Stop(true);,1
\Vector3.Distance(unit.CurrentPosition,\,1
Queue<BallisticEffect>,1
CustomAmmoCategories.AmmunitionDef[id],1
random,1
extAmmoDef.SurfaceImpactDesignMaskId,1
(Exception),1
0.6f),1
counter,1
(objectSpawnData.spawnedObject,1
four,1
Morozov,1
AOEHitsInfo.Count;++aHitGroupIndex),1
__instance.meleeType,1
\"\+xindex+"\:"\+zindex+"\\n"\);\,1
make,1
dmask;,1
DateTime,1
manager,1
//++errorTrees;,1
\Path.Combine(filename,\,1
\JsonConvert.DeserializeObject<EffectData[]>(defTemp["\statusEffects"\].ToString());\,1
PreferLethalDamageToRearArcFromHostileFactor_expectedDamageForShooting,1
maxShots;,1
List<AOEHitInfo>,1
потом,1
\(defTemp["\SurfaceImpactDesignMaskId"\]\,1
\CustomAmmoCategories.swtichToBestToHitMode(weapon,unit,target);\,1
Action<BallisticEffect>,1
findWeaponRealCategory(string,1
\typeof(Weapon),\,1
\algorithm\n"\);\,1
finalHeading,1
ammoId),1
\Mask:"\+sdm.Value+"\\n"\);\,1
The,1
\ballistic\n"\,\,1
Log.LogWrite(weapon.UIName,1
hitDamage);,1
dependencyLoad.RegisterLoadCompleteCallback(new,1
нужно,1
Отправим,1
\typeof(WeaponEffect).GetMethod("\OnImpact"\,\,1
melee,1
impact,1
expectedMessages.Add((ExpectedMessage)new,1
cecell.y,1
(toHit,1
combat.GetAllEnemiesOf(weapon.parent);,1
\"\RogueTech\,1
ancorType,1
виду,1
\CustomAmmoCategories.Settings.BurningFX,\,1
CustomAmmoCategories.WeaponAmmo,1
\list\n"\);\,1
((UnityEngine.Object)__instance.preFireVFXPrefab,1
location,1
режим,1
\mode\n"\);\,1
\AccessTools.Method(typeof(CombatHUDWeaponSlot_RefreshDisplayedWeapon),\,1
BallisticEffect_FireNextBulletShell.watchdog.ElapsedMilliseconds,1
\[HarmonyPatch("\Insert"\)]\,1
(amsLEffect,1
к,1
((localDate.Month,1
(box.IsFunctional,1
\AOEHitsInfo[aHitGroupIndex].hitInfo,\,1
\MineFieldHelper.registerMovingDamageFromPath(__instance.OwningActor,\,1
targetMech),1
Скорее,1
(attackIndex,1
(weapon.IsCooldown(),1
shellsEffects.Count,1
Stability,1
mf.FXDistance,1
CustomAmmoCategories.clearAllWeaponEffects();,1
\[HarmonyPatch("\BuildMeleeDirectorSequence"\)]\,1
(weaponMode.AmmoCategory.Index,1
++aHitIndex),1
CustomAmmoCategories.switchToMostClusterAmmo(weapon);,1
e,1
List<QuadTreeTransform>,1
//__instance.HasMovedThisRound,1
\CustomAmmoCategoriesLog.Log.LogWrite("\WARNING\,1
WeaponEffects[wGUID][CustomAmmoCategories.ShellsWeaponEffectId],1
weapon.weaponRep.vfxTransforms[0]);,1
__instance.startPos,1
laser,1
\bullets:"\+fullBulletsCount+"\\n"\);\,1
\Jammed!"\,\,1
(message,1
[HarmonyPatch(typeof(MissileLauncherEffect))],1
\//_scorchMaterial.EnableKeyword("\_DYNAMIC"\);\,1
WeaponEffect_PlayMuzzleFlash,1
cell.MineField,1
\CustomAmmoCategoriesLog.Log.LogWrite("\laser\,1
\BattleTech.ShopDefItem("\Weapon_LRM_LRM20_3-Zeus"\,\,1
captain,1
BallisticEffect_FireNextBulletShell,1
function,1
scale;,1
startTransformObject;,1
Executing,1
с,1
cell.x),1
реализации,1
\harmony.Patch(original,\,1
Resolve,1
=>,1
FootstepManager_scorchMaterial.ScorchMaterial;,1
-1);,1
\"\,\,1
shot);,1
(curCount.ContainsKey(ammo.Key)),1
bullet),1
dependencyLoad,1
cell.y),1
DynamicMapHelper.loadedMasksDef[dmaskids[terrainMaskFlags]];,1
\CustomAmmoCategoriesLog.Log.LogWrite("\MechDFASequence.CompleteOrders\n"\);\,1
\message,\,1
result.Add(weapon.ammoBoxes[index].ammoDef.Description.Id);,1
(__instance.OwningVehicle,1
\scorches:"\+\,1
\init\n"\);\,1
\BindingFlags.NonPublic).SetValue(shellsSubEffect,\,1
\"\AllMissilesComplete"\,\,1
remove,1
(distance,1
result.Add(spreadCacheRecord.Value);,1
\Action<string,\,1
случилась,1
\weapon,AbstractActor\,1
лишних,1
result.Add(box.ammoDef.Description.Id);,1
\ammoId,\,1
((UnityEngine.Object)projectileMeshObject,1
\Vector3(25f,\,1
\CustomAmmoCategoriesLog.Log.LogWrite("\Initing\,1
Queue<BallisticEffect>>,1
Action(VFXDepsLoaded));,1
(amsrec.weaponCountred.Contains(missile.weaponIndex)),1
\clean\n"\);\,1
player,1
\BulletEffect_FireShell.WeaponEffectFire(__instance,\,1
\INTERUPTED"\,\,1
ammoCategoryList1.Add(weaponAmmoType);,1
ammoCategoryList1,1
\BURN"\;\,1
(tryParseMethodInfo,1
start,1
\BindingFlags.NonPublic).SetValue(shellsEffect,\,1
DynamicMapHelper.mapMetaData.GetCellAt(pos),1
__instance.RootSequenceGUID;,1
WillFireAtTargetFromPosition,1
Shutdown,1
JammingEnabler.jammQueue.Dequeue();,1
//try,1
successfulParse,1
AOEHitsCount);,1
(gameState.SimGameMode,1
ShellHitRecord>>>>,1
\импакт,\,1
(HeatSetted,1
speed:,1
\[HarmonyPatch("\ValidateMechHasAppropriateAmmo"\)]\,1
if(extWeapon.AmmoCategory.BaseCategory,1
(_scorchMaterial,1
ammoCategoryList2,1
BurnHeat;,1
(AOEHitInfo,1
__instance.thisTransform.position;,1
MechMeleeSequence_GenerateMeleePath,1
ammo.AmmoCategory.ToString(),1
value),1
__instance.weapon.DamagePerShotAdjusted(__instance.weapon.parent.occupiedDesignMask);,1
terrain,1
assemblyFile,1
(isBurning),1
BallisticEffect_OnCompleteShell,1
newHeading;,1
10U);,1
curvyInfo.UnitySpline.Add(curvyInfo.spline);,1
System.IO.Directory.GetParent(CustomAmmoCategoriesLog.Log.BaseDirectory).FullName;,1
treeInstances[t]);,1
curvyInfo,1
\dataManager.InjectDependencyLoader(dependencyLoad,\,1
SavesForm,1
Combat.MapMetaData.GetLerpedHeightAt(groundPos);,1
Now,1
(CustomAmmoCategories.WeaponEffects[wGUID].ContainsKey(extWeapon.ShrapnelWeaponEffectID),1
\__instance.preFireVFXPrefab.name,\,1
wGUID),1
__instance);,1
expectedDamage),1
gameState.SimGameMode.ToString();,1
дробей,1
\typeof(WeaponEffect).GetField("\attackSequenceNextDelayTimer"\,\,1
typeof(BallisticEffect),1
(DynamicMapHelper.loadedMasksDef.ContainsKey(dmaskids[terrainMaskFlags])),1
\[HarmonyPatch("\Active"\)]\,1
__instance.unregisterFragEffect();,1
(def.AmmoCategory,1
projectileLightObject.SetActive(true);,1
__instance.attackSequenceNextDelayMax);,1
__instance.GetCellAt(worldTreePos),1
\inited\n"\,true);\,1
mech.ammoBoxes),1
HUD.MechWarriorTray.ConfirmAbilities(AbilityDef.ActivationTiming.ConsumedByFiring);,1
incomingDamage,1
if(curvyInfo,1
break;,1
(string.IsNullOrEmpty(mf.VFX)),1
\typeof(WeaponRealizer.Core).GetMethod("\Init"\,\,1
WeaponMode,1
\string>>(defTemp["\SurfaceImpactDesignMaskId"\].ToString());\,1
shut,1
instead,1
\[HarmonyPatch("\AddScorch"\)]\,1
[HarmonyPriority(Priority.HigherThanNormal)],1
harmony.PatchAll(ancorType.Assembly);,1
through,1
(extWeapon.AMSImmune,1
((targetMech.CurrentHeat,1
extAmmoDef.MineFieldDamage;,1
if(shrapnelHitRecord,1
values:,1
BindingFlags.Instance).GetValue(parentLauncher);,1
baseManifest,1
WeaponEffect.WeaponEffectState.NotStarted)),1
((double)__instance.preFireDuration,1
tree.heightScale,1
target.x,1
weapon.HeatDamagePerShot,1
\Ammo"\,\,1
ap,1
\BindingFlags.NonPublic).SetValue(moveSequence,\,1
\BattleTech.ShopDefItem("\Weapon_Laser_MediumLaser_2-Magna"\,\,1
parentAudioObject,1
\(CustomAmmoCategories.hasHittableLocations(weapon,\,1
startTransformObject.transform.localScale,1
disabling,1
\mech\n"\);\,1
\dx,\,1
\(Material)typeof(FootstepManager).GetField("\_scorchMaterial"\,\,1
(AMSRecord,1
enemyHarmony,1
MineFieldDamage(this,1
hitLocations,1
(CustomAmmoCategories.IsJammed((Weapon)__instance),1
\Resources.Load<Material>("\Decals/ScorchMaterial"\);\,1
хранения,1
CACDynamicTree.redrawTrees(redrawTreeDatas);,1
ecell.mapMetaData.mapTerrainDataCells.GetLength(0)),1
popWeaponShellsEffect(Weapon,1
extAmmoDef.MineFieldCount;,1
subscriber,1
\typeof(Quaternion),\,1
cacTree.hideOriginal();,1
field,1
0.4f),1
MultiAttack_GetExpectedDamageForMultiTargetWeapon,1
typelib,1
((currentBullet,1
treeInstances,1
weapon.ProjectilesPerShot,1
\CustomAmmoCategories.InitWeaponEffect(weaponRep,\,1
\CustomAmmoCategoriesLog.Log.LogWrite("\RegisterWeapon\,1
you!\nDo,1
(t,1
\forest\n"\);\,1
CustomAmmoCategories.unregisterAMSCounterMeasure(impactMessage.hitInfo);,1
\(CustomAmmoCategories.findPlayerWeaponAmmoGUID(wGUID,\,1
compute,1
GameObject.Destroy(curvyInfo.UnitySpline);,1
TerrainData,1
overheat,1
AmmoCategory.NotSet,1
component.main.duration;,1
weapon.parent.isAmmoEjecting(false);,1
MechComponentRef,1
\bullet:"\\,1
просто,1
(object)(CustomAmmoCategories.IsCooldown((Weapon)__instance)),1
\BindingFlags.Public).SetValue(null,\,1
typeof(AbstractActor),1
cuCat.Index;,1
\[HarmonyPatch("\PlayMuzzleFlash"\)]\,1
\registredMineFieldDamage.Add(combatant,\,1
targetHitCache,1
\hitDamage\n"\);\,1
//continue;,1
-1;,1
damage.ToString();,1
movement,1
\typeof(List<Weapon>),\,1
AIRoleAssignment_EvaluateSniper,1
lastMineFieldFXPlayedPosition,1
MechMeleeSequence_BuildMeleeDirectorSequence,1
extAmmoDef.MineFieldRadius;,1
\CustomAmmoCategories.shrapnelFireShells(hitInfo,\,1
\CustomAmmoCategoriesLog.Log.LogWrite("\MechMeleeSequence.CompleteOrders.\n"\);\,1
//float,1
bullets.RemoveAt(currentBullet);,1
ap.x,1
__instance.OnMeleeReady(null);,1
CustomAmmoCategories.WeaponDef[id],1
[HarmonyPatch(typeof(MechJumpSequence))],1
\BattleTech.ShopDefItem("\Weapon_PPC_PPCER_2-TiegartMagnum"\,\,1
AssetBundleManager,1
this.parentLauncher.OnBulletImpact(this);,1
(shHitIndex,1
meleeSequence.willConsumeFiring,1
extDef.ShrapnelWeaponEffectID,1
\BindingFlags.NonPublic).GetGetMethod(true).Invoke(__instance,\,1
\"\RogueModuleTech"\);\,1
vehicle,1
\GameObject.Destroy(startTransformObject,1f);\,1
\this.AbilityButtons[index],\,1
attackSequence.target,1
\"\mod.json"\);\,1
cur_index.ToString(),1
\CustomAmmoCategories.AMSFire(LaserEffect,\,1
Выбираем,1
\broken\n"\);\,1
RegisterAmmunition(string,1
\hitInfo.attackWeaponIndex+"\\,1
assetsManagerProp,1
(AMSBallistic,1
VersionManifestEntry,1
\type\n"\);\,1
Terrain.activeTerrain.terrainData;,1
(shellsEffect,1
__instance.parentCombatant,1
\ActionButtonsProperty.DeclaringType.GetProperty("\ActionButtons"\);\,1
Terrain.activeTerrain.terrainData.treeInstanceCount,1
weaponAmmoCategory;,1
\(double)instance.GetCorrectedRoll(hitInfo.toHitRolls[hitIndex],\,1
__state.hitInfo;,1
\CustomAmmoCategoriesLog.Log.LogWrite("\Ammunition\,1
settings_filename,1
false,1
WeaponEffect_InitProjectileShells,1
(CustomAmmoCategories.WeaponEffects.ContainsKey(wGUID),1
начало,1
mfDamage.fxRecords),1
1.2f;,1
gen.Emit(OpCodes.Ldarg_2);,1
\MineField(damageChance,\,1
adapted,1
points,1
\CustomAmmoCategories.getSpreadCache(__instance.hitInfo,\,1
(affectedPoints.Count,1
\//CustomAmmoCategoriesLog.Log.LogWrite("\MechMeleeSequence.setState\,1
fieldVFX.fXPoolGameObjects.Add(new,1
\CACDynamicTree(__instance,\,1
cecell.x,1
80000));,1
WeaponEffect.WeaponEffectState.Firing;,1
DynamicMapHelper.mapMetaData.GetZIndex(pos.z);,1
\CustomAmmoCategoriesLog.Log.LogWrite("\VFX\,1
игрек,1
\position,\,1
redrawTreeDatas),1
testEventId0,1
загружено,1
\CustomAmmoCategoriesLog.Log.LogWrite("\Orders\,1
\CustomAmmoCategories.RegisterWeapon((string)defTemp["\Description"\]["\Id"\],\,1
dmask,1
i'm,1
pilot.StatCollection.AddStatistic,1
1120000));,1
this.OnImpact(this.weapon.DamagePerShotAdjusted(this.weapon.parent.occupiedDesignMask));,1
shellsEffects.Add(shellsEffect);,1
errorTrees,1
ammo.IsAAMS,1
tree,1
(ClusterCount,1
(object)null);,1
bullet.currentState,1
\(Action)null,\,1
clean,1
List<BallisticEffect>>();,1
LOFCache_UnitHasLOFToTarget,1
\loadRequest.AddLoadRequest<GameObject>(BattleTechResourceType.Prefab,\,1
\weapon,string\,1
if(fullBulletsCount,1
https://en.wikipedia.org/wiki/Gaussian_function,1
меняем,1
_shellsEffectsQueue,1
данные,1
\'"\\,1
отдельную,1
\CustomAmmoCategoriesLog.Log.LogWrite("\no\,1
weapon.DamagePerShot,1
DataManager.InjectedDependencyLoadRequest,1
(object)0.0f,1
50000));,1
AOEHitsInfo,1
\CustomAmmoCategoriesLog.Log.LogWrite("\Получен\,1
ammoWeapons.Add(weapon);,1
AddSequenceToStackMessage(__instance.DoneWithActor()));,1
sequence,1
\normal\n"\);\,1
crit,1
lastBulletUID,1
BindingFlags.Instance).GetValue(weapon);,1
__instance.attackCompletelyMissed,1
ecell.mapMetaData.mapTerrainDataCells.GetLength(1),1
QuadTree_Insert,1
\(float[])typeof(FootstepManager).GetField("\_scorchAlphas"\,\,1
массива,1
\info\n"\,true);\,1
next,1
AmmunitionBoxDef,1
attributes,1
(CustomAmmoCategories.isWeaponHasHeatAmmo(weapon),1
\incDmg:"\\,1
\CustomAmmoCategoriesLog.Log.LogWrite("\Removing\,1
cell.hexCell.getStrongestMineField();,1
weapon.weaponRep.vfxTransforms[0].parent;,1
\CustomAmmoCategoriesLog.Log.LogWrite("\BulletEffect.OnComplete\,1
amsShooted,1
locationForTarget,1
достигнут,1
https://natedenlinger.com/php-random-number-generator-with-normal-distribution-bell-curve/,1
__instance.target.CurrentPosition);,1
init,1
Can't,1
(UnityEngine.Object)null,1
avaibleAmmo),1
пули,1
\BattleTech.ShopDefItem("\Weapon_LRM_LRM5_3-Zeus"\,\,1
treeIndex,1
состояние,1
\property\n"\);\,1
targetsHitCache[target];,1
gameObject.transform.parent,1
\__instance.weapon.parent.Combat.DataManager.PooledInstantiate(__instance.muzzleFlashVFXPrefab.name,\,1
switchToMostHeatAmmo(Weapon,1
popup,1
(ClusterShot,1
fake,1
\Vector3.Distance(shrapnelHitRecord.hitInfo.hitPositions[index],shrapnelHitRecord.startPosition)/4.0f;\,1
((UnityEngine.Object)__instance.projectilePrefab,1
takes,1
(isMineField),1
;,1
(double)toHitChance;,1
type.MakeByRefType(),1
проигрывается,1
//.GetGetMethod();,1
(weapon.DamagePerShot,1
AmmoBox,1
mode.AmmoCategory;,1
treeInstances[t].heightScale+,1
вызывало,1
\Assembly.LoadFile(Path.Combine(directory,"\CACPatches.dll"\));\,1
shrapnelHitRecord.startPosition,1
BattleTech.SimGameState.SimGameType.KAMEA_CAMPAIGN)),1
isWeaponHasHeatAmmoMode(Weapon,1
pushWeaponShellsEffect(BallisticEffect,1
GenericPopupBuilder,1
\(bool)tryParseMethodInfo.Invoke(null,\,1
__instance.owningActor.Combat.MessageCenter.PublishMessage((MessageCenterMessage)new,1
\CustomCategoriesLog.LogWrite("\Weapon\,1
TripleBoolean.True),1
List<bool>();,1
meleeSequence.RootSequenceGUID,1
ToHit_GetAllModifiers,1
def.Description.Id,1
AbstractActor_GetLongestRangeWeapon,1
MapTerrainDataCellEx),1
\BindingFlags.Static).Invoke(null,\,1
components,1
weapon);,1
(curDelta,1
you?\nRogueTech,1
acell,1
\__instance.ResetAbilityButton(actor,\,1
shellsEffects);,1
errorMessages),1
GameObject.Destroy(curvyInfo.splineObject);,1
List<string>();,1
effect.weapon.defId,1
\DynamicMethod("\CACWeaponEffectOnComplete"\,\,1
избавиться,1
April,1
bullets.Count),1
\System.IO.Path.Combine(CustomAmmoCategoriesLog.Log.BaseDirectory,\,1
CACWeaponEffect>,1
\Log.LogWrite("\Mech.OnJumpComplete\n"\);\,1
\WeaponEffect_FireTerrain.Prefix(__instance,hitInfo,hitIndex,emitterIndex);\,1
do,1
AIHitCap:,1
BulletObject,1
\CustomAmmoCategoriesLog.Log.LogWrite(JsonConvert.SerializeObject(extAmmoDef.statusEffects)+"\\n"\);\,1
gameObject.GetComponent<BulletEffect>();,1
Epsilon),1
1.0,1
cacwe.FiringCompleteCAC;,1
\25f,\,1
But,1
effect.weapon;,1
(extWeapon.Modes.Count,1
ecell,1
\AoE\n"\);\,1
if(manager,1
Melee,1
(__instance.OwningMech.hasRegistredMovingDamage()),1
\this.Combat.DataManager.PoolGameObject(this.prefabName,\,1
\typeof(WeaponEffect).GetField("\activeProjectileName"\,\,1
tryied,1
\BattleTech.ShopDefItem("\Gear_HeatSink_Generic_Thermal-Exchanger-III"\,\,1
(WeaponEffects[wGUID].ContainsKey(CustomAmmoCategories.ShellsWeaponEffectId),1
tree.widthScale,1
MechValidationType.AmmoUnneeded;,1
RegisterWeapon(string,1
\CustomAmmoCategoriesLog.Log.LogWrite("\FootstepManager.scorchMaterial\,1
GameObject.Instantiate(gameObject);,1
файл,1
\(AkGameObj)typeof(WeaponEffect).GetField("\parentAudioObject"\,\,1
hitLocation;,1
\found:"\\,1
gen.Emit(OpCodes.Ldarg_3);,1
maxShots);,1
\combatantByGuid.GameRep.PlayImpactAnim(bullet.hitInfo,\,1
\BattleTech.ShopDefItem("\Weapon_SRM_SRM6_3-Valiant"\,\,1
(!((UnityEngine.Object)componentInChildren,1
__instance.t,1
его,1
CustomAmmoCategories.ShrapnelHitsRecord.Remove(attackSequenceId);,1
\mechDef,\,1
cacwe.FiringCompleteCAC,1
CustomAmmoCategories.testFireAMS(__instance.DisplayedWeapon);,1
(!Combat.TurnDirector.IsInterleaved),1
FireAMS(Weapon,1
\minesCount,\,1
(ammoId,1
line);,1
fail,1
\(Transform)typeof(WeaponEffect).GetField("\projectileTransform"\,\,1
\(object)directory,\,1
cachedCurve.missileProjectileSpeed,1
Postfix(WeaponEffect,1
(shrapnelHitRecord.isSeparated,1
targetCombatant.Combat.FindActorByGUID(instance.allAffectedTargetIds[index1]);,1
(AMSLaserEffect,1
\typeof(WeaponEffect).GetField("\preFireRate"\,\,1
JammingEnabler.jammAMS();,1
setted,1
\AttackStackSequence((AbstractActor)__instance.OwningMech,\,1
savesForm,1
if(assetsManagerProp,1
\CustomAmmoCategoriesLog.Log.LogWrite("\MechJumpSequence.CompleteOrders\n"\);\,1
trees,1
\this.Combat.MessageCenter.RemoveSubscriber(MessageCenterMessageType.AddSequenceToStackMessage,\,1
\exists:"\\,1
wish,1
\BattleTech.ShopDefItem("\Gear_Cockpit_StarCorps_Dalban"\,\,1
растёт,1
extAmmoDef.MineFieldSFX;,1
curvyInfo.UnitySpline.Length;,1
base,1
((gameState.SimGameMode,1
\CustomAmmoCategoriesLog.Log.LogWrite("\BallisticEffect_AllBulletsComplete\,1
MessageCenterMessage,1
каждый,1
MineFieldHitChance(this,1
amunitionAmmoType,1
sertanly,1
strange,1
amsShooted;,1
\"\+weapon.UIName+"\\,1
enemies,1
cell.trees.Add(new,1
Dequeue,1
affectedPoints),1
__instance.PublishWeaponCompleteMessage();,1
SendResponce(ref,1
strongScorches,1
undamaged,1
CustomAmmoCategoriesLog.Log.LogWrite(attacker.DisplayName,1
AbstractActor_HasLOFToTargetUnit,1
-1.0f,1
weaponMode.AmmoCategory;,1
\Validation\n"\);\,1
weapon.weaponRep.vfxTransforms[0].rotation;,1
Prefix(DataManager,1
count,1
target.DisplayName,1
lmVFX,1
sub,1
List<MapEncounterLayerDataCell>,1
postfix,1
MissileLauncherEffect_FireShells,1
carries,1
[HarmonyPatch(typeof(ActorMovementSequence))],1
(locationForTarget,1
\HarmonyInstance.Create("\com.joelmeador.WeaponRealizer"\);\,1
version,1
(weapon.IsJammed(),1
Postfix(BulletEffect,1
\CustomAmmoCategories.RegisterAmmunition((string)defTemp["\Description"\]["\Id"\],\,1
\"\Ammo_AmmunitionBox_Generic_"\\,1
(cuCat.Id,1
\CustomAmmoCategories.getSpreadCache(bullet.hitInfo,\,1
ecell.mapMetaData.mapTerrainDataCells.GetLength(0),1
mechDef.Inventory.Length;,1
//treeInstances[t].heightScale,1
ammoWeapons,1
\defTemp.Remove("\SurfaceImpactDesignMaskId"\);\,1
CustomAmmoCategories.getExtWeaponDef(__instance.weaponDef.Description.Id);,1
projectileMeshObject,1
\BattleTech.ShopDefItem("\Ammo_AmmunitionBox_Generic_GAUSS"\,\,1
tFlags);,1
\grp:"\+\,1
BTCustomRenderer.SetVFXMultiplier(projectileParticles);,1
\CustomAmmoCategoriesLog.Log.LogWrite("\Ancor\,1
(string.IsNullOrEmpty(__instance.projectilePrefab.name),1
\(string)typeof(WeaponEffect).GetField("\activeProjectileName"\,\,1
{return,1
//__instance.HasFiredThisRound,1
hitInfo.attackGroupIndex,1
(double)__instance.attackSequenceNextDelayMax,1
isWeaponHasClusterAmmo(Weapon,1
BallisticEffect_AllBulletsComplete,1
w/,1
__instance.HandleDeath(actor.GUID);,1
(extWeapon.AmmoCategory.Index,1
enemyPatchedMethods,1
принципе,1
xindex,1
Postfix(MechJumpSequence,1
MultiAttack_FindWeaponToHitTarget,1
(hitLocations.Length,1
\Dictionary<BattleTechResourceType,\,1
4;if,1
projectileTransform,1
(actor,1
bullets[bulletIdx].GetInstanceID(),1
WeaponDef_AmmoCategoryToAmmoBoxId_get,1
popup.IsNestedPopupWithBuiltInFader().CancelOnEscape().Render();,1
getWeaponShellEffect(Weapon,1
if(__instance.ammoBoxes),1
\CustomAmmoCategoriesLog.Log.LogWrite("\pushWeaponShellsEffect\,1
extAmmoDef.MineFieldVFX;,1
\сохранение"\;\,1
(dmask,1
.GetValue(Combat.DataManager.ResourceLocator);,1
большой,1
WeaponEffect_OnComplete,1
spawn,1
registredMineFieldDamage[combatant];,1
1000f,1
cached,1
waypoints,1
mf.VFX,1
2460000));,1
AddMineField(MineField,1
waypoints),1
\seqID:"\+\,1
xlimit,1
exposed,1
curvyInfo.UnitySpline.Interpolation,1
WeaponDef;,1
ccell,1
List<AbstractActor>,1
\"\+directFireModifier+"\\n"\);\,1
HBS.Logging.LogLevel.Debug));,1
(mode.AmmoCategory,1
Не,1
succeeded,1
hitCount.Value;,1
\Dictionary<TerrainMaskFlags,string>\,1
\CustomAmmoCategoriesLog.Log.LogWrite("\It\,1
WeaponDef,1
\null\n"\);\,1
isWeaponHasDiffirentAmmoModes(Weapon,1
\CustomAmmoCategoriesLog.Log.LogWrite("\ToHit.GetEvasivePipsModifier"\);\,1
enemies[0].CurrentPosition);,1
\BindingFlags.NonPublic).Invoke(shellsEffect,\,1
transform,1
_scorchMaterial);,1
ActorMineFieldVFX>();,1
\field,AbstractActor\,1
(aGUID,1
(ammoWeapons.Count,1
вернуть,1
(startx,1
слишком,1
this.startPos,1
\(GameObject)typeof(WeaponEffect).GetField("\projectileLightObject"\,\,1
extAmmoDef.MineFieldHeat;,1
3080000));,1
(ballisticEffect,1
\MineFieldHelper.registerMovingDamageFromPath(__instance.OwningMech,\,1
CustomAmmoCategories.getWeaponUnseparatedDamageMult(__instance.weapon);,1
место,1
startTransformObject.transform.parent,1
\ammoCat:"\\,1
typeof(ICombatant),1
mf,1
vfx);,1
projectileLightObject,1
shellsQueue);,1
\typeof(WeaponEffect).GetMethod("\Fire"\,\,1
nameof(ShotsWhenFiredDisplayOverider));,1
these,1
HashSet<object>();,1
BulletEffect_FireShell,1
AOEHitsInfo[aHitGroupIndex].damageList.Count;,1
\JSONSerializationUtility.FromJSON<EffectData[]>(extAmmoDef.statusEffects,\,1
data.size),1
BindingFlags.Instance).SetValue(,1
ammoHeatWeapons,1
does,1
(amsBEffect,1
_scorchAlphas);,1
\MineFieldHelper.registerJumpingDamageFrom(__instance.OwningMech,\,1
Result,1
(curLevel,1
\typeof(WRClusteredShotRandomCacheEnabler_IsClustered).GetMethod("\Prefix"\,BindingFlags.Static);\,1
\msg,\,1
\VersionManifestEntry>>)typeof(BattleTechResourceLocator).GetField("\baseManifest"\,\,1
FootstepManager_ProcessScorches,1
overwhelming,1
Terrain.activeTerrain.terrainData.treeInstanceCount;,1
MechValidationRules_ValidateMechHasAppropriateAmmo,1
ActorMineFieldVFX();,1
\lmVFX.Combat.DataManager.PoolGameObject(lmVFX.VFXprefab,\,1
\__result.ToString()+"\\n"\);\,1
Information,1
\ExpectedImpact(attackSequence,\,1
роста,1
\abilityList[index],\,1
\4,\,1
\CustomAmmoCategoriesLog.Log.LogWrite("\OnImpact\,1
((toHit,1
mf.FXDistance),1
MineFieldDamage());,1
((AMSBallistic.currentState,1
\miefield\n"\);\,1
bullet.hitInfo.targetId;,1
Vehicle;,1
\typeof(string),\,1
(result.IndexOf(weapon.ammoBoxes[index].ammoDef.Description.Id),1
ammoHeatWeapons.Add(weapon);,1
(endy,1
impactMessage.hitInfo,1
WeaponDef_AmmoCategoryToAmmoId_get,1
CustomAmmoCategoriesPatches.BallisticEffect_SetupBulletsShell.SetupMissilesCount,1
\Combat.DataManager.PooledInstantiate(__instance.bulletPrefab.name,\,1
Enqueue,1
hasHittableLocations(Weapon,1
\registred:"\\,1
baseWorkOrder)),1
HarmonyMethod(postfix));,1
\"\'\n"\);\,1
amsBEffect,1
weapon.HeatDamagePerShot;,1
1000.0),1
\Action<BulletEffect,\,1
jresp);,1
Vector3[1],1
they're,1
\UnityEngine.Random.Range(__instance.attackSequenceNextDelayMin,\,1
baseManifest),1
_shellsEffectsStorage,1
Vector3.zero);,1
\sequnce\n"\);\,1
что,1
this.Combat.MessageCenter.PublishMessage(message1);,1
Queue<BallisticEffect>();,1
их,1
\Path.Combine(CustomAmmoCategoriesLog.Log.BaseDirectory,\,1
\clean\n"\,true);\,1
\"\Ammunition_"\\,1
gen.Emit(OpCodes.Ldarg_1);,1
CurrentAmmo,1
def.Ammo.Category.ToString());,1
\more?"\);\,1
fallback,1
(List<QuadTreeTransform>)DynamicTreesHelper.transformListField.GetValue(__instance);,1
\[HarmonyPatch("\setState"\)]\,1
((aGUID,1
endPos);,1
typeof(BulletEffect));,1
_scorchAlphas.Length;,1
(!string.IsNullOrEmpty(__instance.preFireSFX)),1
\[HarmonyPatch(typeof(MissileLauncherEffect),\,1
\path:"\\,1
\//CustomAmmoCategoriesLog.Log.LogWrite("\get\,1
Bin,1
\"\ProjectilesPerShot"\).GetGetMethod();\,1
\CustomAmmoCategoriesLog.Log.LogWrite("\versionManifestEntry.IsResourcesAsset:"\+\,1
65536;,1
extWeapon.IsAMS;,1
\CustomAmmoCategoriesLog.Log.LogWrite("\This\,1
endx;,1
fieldDamageRec,1
(weaponAmmoCategory.Index,1
BTCustomRenderer_DrawDecals.Scorches.Count+,1
(SplatMapInfo.IsForest(cell.terrainMask),1
\"\MINE\,1
Postfix(QuadTree,1
\forward,\,1
List<BallisticEffect>();,1
\typeof(AttackDirector.AttackSequence).GetProperty("\attackCompletelyMissed"\,\,1
//WeaponMode,1
FootstepManager_AddScorch.strongScorches.Count),1
targetMech,1
about,1
(curCount.ContainsKey(box.ammoDef.Description.Id),1
\"\:"\+Terrain.activeTerrain.name+"\\n"\);\,1
{amsrec.weaponCountred.Clear();};,1
\(defTemp["\ShrapnelWeaponEffectID"\]\,1
__instance.shotDelay;,1
(versionManifestEntry,1
CustomAmmoCategoriesLog.Log.LogWrite,1
isNewMoveCell(this,1
tFlags,1
if(bbEffect,1
\[HarmonyBefore("\com.joelmeador.WeaponRealizer"\)]\,1
this.spawnedObject);,1
this.Orders,1
(MessageCenterMessage)new,1
amsHit);,1
finding,1
further,1
(ClusterSetted,1
\CustomAmmoCategoriesLog.Log.LogWrite("\CRITICAL\,1
\mode:"\+mode.UIName+"\\n"\);\,1
если,1
energy,1
getAvaibleEffectiveAmmo(Weapon,1
special,1
weapon.AmmoCategory),1
\baseWorkOrder,\,1
this.spawnedObject.SetActive(false);,1
for(int,1
(LaserEffect,1
\CustomAmmoCategoriesLog.Log.LogWrite("\manager\,1
\down,\,1
то,1
prefabName,1
__instance.gameObject.AddComponent<CurvySpline>();,1
\distance,\,1
Target,1
это,1
[HarmonyPatch(typeof(MechValidationRules))],1
CombatHUDWeaponTickMarks_GetValidSlots,1
\10,\,1
ReceiveMessageCenterMessage,1
Ballistic,1
hy,1
Change,1
!ammoCategoryList1.Contains(weaponAmmoType)),1
object>,1
PreferExposedAlonePositionalFactor_InitEvaluationForPhaseForUnit,1
Отражаем,1
zindex,1
component.gameObject));,1
fXPoolGameObjects;,1
use,1
(starty,1
ecm_enter,1
\CustomAmmoCategoriesLog.Log.LogWrite("\creating\,1
TemporarilyDisabledStatisticName,1
Prefix(BulletEffect,1
\[HarmonyPatch("\GenerateMeleePath"\)]\,1
количества,1
CustomAmmoCategoriesLog.Log.LogWrite(manifests.Key,1
\"\+target.DisplayName+"\\n"\);\,1
CustomAmmoCategories.ShellsWeaponEffectId),1
\("\+ecell.x+"\,"\+ecell.y+"\)\n"\);\,1
damageChance,1
PlayImpactAnim,1
(__instance.meleeType,1
(AMSBallistic.currentState,1
\CustomAmmoCategories.calculateInterceptCorrection(CustomAmmoCategories.getWeaponEffect(amsrec.weapon),\,1
CustomAmmoCategories.AmmunitionDef,1
versionManifestEntry,1
aHitIndex));,1
(ReceiveMessageCenterMessage)(message,1
actorByGuid,1
\1f),\,1
\y:"\\,1
VFX,1
MineFieldHelper.inflictRegistredMovingDamageVehicle(__instance.OwningVehicle);,1
Stopwatch,1
(CustomAmmoCategories.isWRJammed((Weapon)__instance),1
cecell.AddTerrainMask(TerrainMaskFlags.DangerousLocation);,1
WeaponHitInfo_ConsolidateCriticalHitInfo.Combat,1
\"\+weapon.defId\,1
BurstBallisticEffect;,1
treesCount;,1
__instance.attackSequenceNextDelayMin,1
nuking,1
\Loaded:"\+key+"\:"\+vfx.GetInstanceID()+"\\n"\);\,1
ever,1
\CustomAmmoCategoriesLog.Log.LogWrite("\ams\,1
(__instance.hitInfo.hitLocations[hitIndex],1
startx;,1
(ammoCategory.Index,1
\true\n"\);\,1
unit.occupiedEncounterLayerCells;,1
dead,1
pos;,1
MissileLauncherEffect_AllMissilesComplete,1
height,1
[HarmonyPatch(MethodType.Setter)],1
ID,1
modeId);,1
\CustomAmmoCategoriesLog.Log.LogWrite("\\nWeapon\,1
координат,1
\CustomAmmoCategoriesLog.Log.LogWrite("\WeaponEffect.PlayPreFire\n"\);\,1
below:,1
number,1
\VFXPoolGameObject(mf.VFX,\,1
projectileMeshObject.SetActive(true);,1
hitLocations),1
unusable,1
\//Dictionary<string,\,1
++index1),1
}catch(Exception,1
((double)hitDamage,1
\CustomAmmoCategoriesLog.Log.LogWrite("\RegisterAmmunition\,1
\gameState\n"\);\,1
\O_o\n"\);\,1
meleeSequence.hasOwningSequence,1
CustomAmmoCategories.Settings.BurningFX);,1
\байт,\,1
\TerrainFlag:"\+sdm.Key+"\\,1
\(object)HBS.Logging.Logger.GetLogger("\CombatLog.MechImpacts"\,\,1
(string,1
(boxAmmoCategory.Index,1
CustomAmmoCategories._shellsEffectsQueue[wGUID].Enqueue(effect);,1
fits,1
ActorMovementSequence_CompleteOrders,1
__instance.Description.Id,1
tryParseMethodInfo,1
first,1
\typeof(BattleTech.AttackDirectorHelpers.MessageCoordinator).GetField("\logger"\,\,1
true)),1
BattleTech.SimGameState,1
\CustomAmmoCategories.AMSFire(amsLEffect,\,1
applying,1
CustomAmmoCategories.getExtWeaponDef(__instance.DisplayedWeapon.defId);,1
ams),1
dngerOnImpact,1
++counter;,1
[assembly:,1
\target,\,1
fXPoolGameObjects,1
SavesForm();,1
AMSLaserEffect,1
(ccell,1
Setting,1
MultiAttack_ValidateMultiAttackOrder,1
BuildWeaponEffectOnComplete(),1
updated,1
shrapnelHitRecord.count;,1
!__instance.SelectedActor.StoodUpThisRound;,1
TODO:,1
\Random.Range(0.0f,\,1
while,1
\AMS\n"\);\,1
Terrain.activeTerrain.terrainData.treeInstances,1
BallisticEffect_OnImpact,1
always,1
(object)attackSequenceNextDelayTimer);,1
